<?php
/** @noinspection ALL */
/**
  * ATUM WooCommerce Inventory Management and Stock Tracking
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2025 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $QQ2Bb = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private $L6Vur = array('action_logs' => '1.3.8', 'export_pro' => '1.6.4.1', 'multi_inventory' => '1.9.4.1', 'product_levels' => '1.9.3', 'purchase_orders' => '1.2.4.1', 'stock_takes' => '1.0.6.1', 'pick_pack' => '1.0.8.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.2.0'); private static $G3CID = []; private static $WHLxh = []; private $Sz7nU; public function __construct() { goto QtvQc; gnQc3: foreach ($K4Ycw as $EXPLw => $HHtF9) { goto FkVxk; FkVxk: if (!(!array_key_exists($EXPLw, $this->L6Vur) && version_compare($HHtF9, '0.0', '>'))) { goto iyM8W; } goto nfKAV; VJ6Ky: iyM8W: goto tmdmC; tmdmC: XMNHQ: goto UpuKA; nfKAV: $this->L6Vur[$EXPLw] = $HHtF9; goto VJ6Ky; UpuKA: } goto weiZ3; weiZ3: a8J6e: goto r3EwV; p6flc: $K4Ycw = (array) apply_filters('atum/addons/loader/extra_addons', []); goto Z4veQ; QtvQc: $this->Sz7nU = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto p6flc; uRsc1: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto Yx2kw; Z4veQ: if (empty($K4Ycw)) { goto AoHpN; } goto gnQc3; Yx2kw: $this->check_addons(); goto s8O1r; r3EwV: AoHpN: goto uRsc1; s8O1r: } public function load_addons() { goto DtLiL; cCWAL: dW5N8: goto PawPR; wh0K_: add_action('admin_enqueue_scripts', function () { goto LICh5; LICh5: Helpers::register_swal_scripts(); goto lBJBZ; w3a19: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto v4Q3s; lBJBZ: wp_register_script('atum-trials-modal', ATUM_URL . 'assets/js/build/atum-trials-modal.js', ['jquery', 'sweetalert2'], ATUM_VERSION, TRUE); goto w3a19; v4Q3s: }, 1); goto aM0G5; Cm02O: foreach ($afztb as $jVj0w => $OM4sX) { goto RTsfh; YAILA: $afztb[$jVj0w]['bootstrap'] = NULL; goto MxT4E; vlQKB: if (!$Xfxut) { goto qgy5E; } goto hmflW; KsB3j: $TWzhb = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $OM4sX['name']); goto LnEnn; o4Yi1: $ILrXF = add_query_arg($rmASv, Addons::ADDONS_STORE_URL . 'my-upgrades/'); goto tYUns; QmEbe: self::$WHLxh[] = $jVj0w; goto QdU6q; cguU3: if (!(empty($ER4pK[$ZLeLK]['expires']) || strtotime($ER4pK[$ZLeLK]['expires']) <= time())) { goto RCUxf; } goto ch6XS; ujixx: $rmASv = array('key' => $ER4pK[$ZLeLK]['key'], 'url' => home_url()); goto o4Yi1; EgzXZ: YTzCP: goto u5DdY; hmflW: if (!(isset($afztb[$NWHud]) || !$this->Sz7nU && !empty($Pxnom[$NWHud]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $Pxnom[$NWHud]['basename']))) { goto mo6W7; } goto mKmhq; uoZVw: A7Uzf: goto vlQKB; Gigsy: fNyq2: goto on1Si; Meeuu: $hoGCE = call_user_func($OM4sX['bootstrap']); goto XlDIg; BRkPr: $afztb[$jVj0w]['bootstrap'] = NULL; goto peCUK; mhst_: if (isset($this->L6Vur[$NWHud])) { goto YTzCP; } goto KsB3j; oMhF8: goto hzcYz; goto EcrnD; cNDh0: $XsVDU[$jVj0w]['key'] = $ER4pK[$ZLeLK]['key']; goto an1Ea; hcX98: vubGZ: goto WJ0Za; on1Si: hzcYz: goto pkV69; LnEnn: $this->show_notices($OM4sX, $TWzhb); goto eIA6H; NfxR6: $afztb[$jVj0w]['bootstrap'] = NULL; goto rx9mK; hJuA9: self::$WHLxh[] = $jVj0w; goto yy_AL; mKmhq: $TWzhb = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $OM4sX['name']); goto fGyJd; fGyJd: $this->show_notices($OM4sX, $TWzhb); goto a3fO8; RQkmf: wJkoD: goto cNEzw; ch6XS: $XsVDU[$jVj0w] = $OM4sX; goto N2tFc; n7u0L: $this->show_notices($OM4sX, $TWzhb); goto W4PXf; MxT4E: array_pop(self::$G3CID); goto oy4F1; peCUK: self::$WHLxh[] = $jVj0w; goto oMhF8; E8swj: mo6W7: goto wGhgW; SCYWH: goto vubGZ; goto HAm_i; bSgO1: $NWHud = $Xfxut ? str_replace('_trial', '', $jVj0w) : $jVj0w; goto ore3Y; TMDN6: self::$WHLxh[] = $jVj0w; goto ba5Ec; LERmL: self::$G3CID[] = $jVj0w; goto Meeuu; DHkDP: $this->show_notices($OM4sX, $TWzhb); goto NfxR6; tSZyE: jKpT2: goto Gigsy; XlDIg: if (!(!$hoGCE && !empty($this->QQ2Bb[$jVj0w]) && version_compare($this->QQ2Bb[$jVj0w], $OM4sX['version'], '<'))) { goto jKpT2; } goto YAILA; fx8fh: $TWzhb = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $OM4sX['name']); goto hcX98; ore3Y: $ZLeLK = strtolower($Pxnom[$NWHud]['name'] ?? ''); goto mhst_; QdU6q: Addons::delete_status_transient($ZLeLK); goto lN2WF; nsN1u: RV0MT: goto cguU3; an1Ea: $XsVDU[$jVj0w]['extended'] = $ER4pK[$ZLeLK]['extended'] ?? FALSE; goto i__ZG; wGhgW: if (!(empty($ER4pK) || empty($ER4pK[$ZLeLK]) || empty($ER4pK[$ZLeLK]['key']))) { goto wJkoD; } goto R22y4; rx9mK: self::$WHLxh[] = $jVj0w; goto HBH6D; i__ZG: if ('now' === $XsVDU[$jVj0w]['expires']) { goto ePZ9y; } goto aLdwF; Q8qup: goto hzcYz; goto nsN1u; bnPw4: $this->show_notices($OM4sX, $TWzhb); goto r97ZD; cNEzw: if (!in_array($ER4pK[$ZLeLK]['status'], ['trial_used', 'invalid', 'disabled', 'missing', 'key_mismatch'])) { goto RV0MT; } goto ujixx; B1raE: qgy5E: goto gmgR2; tYUns: $TWzhb = sprintf('trial_used' === $ER4pK[$ZLeLK]['status'] ? __('The ATUM %1$s could not be loaded because it has already been used on another site. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN) : __('The ATUM %1$s could not be loaded because its license is invalid. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN), $OM4sX['name'], '<a href="' . $ILrXF . '" target="_blank">', '</a>'); goto bnPw4; W4PXf: $afztb[$jVj0w]['bootstrap'] = NULL; goto QmEbe; EcrnD: RCUxf: goto B1raE; aLdwF: $TWzhb = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $OM4sX['name'], date_i18n(get_option('date_format'), strtotime($ER4pK[$ZLeLK]['expires']))); goto SCYWH; r97ZD: $afztb[$jVj0w]['bootstrap'] = NULL; goto hJuA9; HAm_i: ePZ9y: goto fx8fh; uzdsS: goto hzcYz; goto E8swj; a3fO8: $afztb[$jVj0w]['bootstrap'] = NULL; goto dVc0i; RTsfh: $Xfxut = str_contains($jVj0w, '_trial') || str_contains($OM4sX['basename'], 'trial'); goto bSgO1; N2tFc: $XsVDU[$jVj0w]['expires'] = $ER4pK[$ZLeLK]['expires'] ?? 'now'; goto cNDh0; dVc0i: self::$WHLxh[] = $jVj0w; goto nmLIF; lN2WF: goto hzcYz; goto RQkmf; eb5Z1: $TWzhb = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $OM4sX['name'], $this->L6Vur[$NWHud]); goto DHkDP; R22y4: $TWzhb = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $OM4sX['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto n7u0L; ba5Ec: goto hzcYz; goto EgzXZ; nmLIF: Addons::delete_status_transient($ZLeLK); goto uzdsS; yy_AL: Addons::delete_status_transient($ZLeLK); goto Q8qup; HBH6D: goto hzcYz; goto uoZVw; WJ0Za: $this->show_notices($OM4sX, $TWzhb . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $OM4sX['addon_url'] . '" target="_blank">', '</a>')); goto BRkPr; u5DdY: if (!version_compare($this->L6Vur[$NWHud], $OM4sX['version'], '>')) { goto A7Uzf; } goto eb5Z1; eIA6H: $afztb[$jVj0w]['bootstrap'] = NULL; goto TMDN6; oy4F1: self::$WHLxh[] = $jVj0w; goto tSZyE; gmgR2: if (!(!empty($OM4sX['bootstrap']) && is_callable($OM4sX['bootstrap']))) { goto fNyq2; } goto LERmL; pkV69: } goto cCWAL; UeMRA: $EB57s->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($XsVDU), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $XsVDU])); goto XEE5C; DtLiL: $afztb = Addons::get_installed_addons(); goto qqzwJ; anERf: $Pxnom = Addons::get_addons_paths(); goto Cm02O; SF5SM: $XsVDU = []; goto GtAz6; GtAz6: $ER4pK = Addons::get_keys(); goto anERf; PawPR: if (empty($XsVDU)) { goto ZG2DD; } goto wh0K_; APu8E: Addons::set_installed_addons($afztb); goto Wr_Mu; Wr_Mu: SNrm1: goto yKqVd; XEE5C: ZG2DD: goto sSsK0; sSsK0: if (!(count(self::$WHLxh) > 0)) { goto SNrm1; } goto APu8E; yKqVd: zo2tl: goto OsI9j; P4BQ1: $EB57s->set_js_dependencies(['atum-trials-modal']); goto UeMRA; qqzwJ: if (empty($afztb)) { goto zo2tl; } goto SF5SM; aM0G5: $EB57s = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto P4BQ1; OsI9j: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($lZme2) { $lZme2['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $lZme2; }); add_action('atum/check_addons', function () { goto kLdgB; GRdkv: xUy_f: goto ai2xI; ai2xI: if (!$bvO69) { goto e7JmH; } goto o7hRF; Xe35M: $OIrng = Addons::get_installed_addons(); goto Dq3PL; kLdgB: $EXUdP = Addons::get_keys(); goto Xe35M; TGB11: e7JmH: goto Go21Z; ue1XJ: $bvO69 = FALSE; goto VnAdd; I34I1: ivuli: goto ue1XJ; Dq3PL: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto ivuli; } goto lnvbV; lnvbV: return; goto I34I1; o7hRF: Addons::set_last_api_access('check_addons'); goto TGB11; VnAdd: foreach ($OIrng as $wQr6y) { goto It_Bd; MhlZT: $unWcL = $EXUdP[$ZLeLK]; goto LktDf; It_Bd: $XOsrd = strtolower($wQr6y['name']); goto nBFE1; j8vFe: if (!($KVj0r && !empty($KVj0r->gSQPC))) { goto S4y2J; } goto EedTH; K2XOO: hHN8F: goto gHYJV; H79xf: if (!(empty($unWcL['trial']) && isset($KVj0r->IWZqI) && TRUE === $KVj0r->IWZqI)) { goto q3kss; } goto C1nR6; nYCeR: $ZLeLK = trim(str_replace('trial', '', $XOsrd)); goto TPTIo; t2chu: q3kss: goto hkQtp; qnSB2: $bvO69 = TRUE; goto MhlZT; yeayA: UK5L4: goto Ogr09; UDiD2: $T37uQ['expires'] = $KVj0r->bbXa3 ?? date_i18n('Y-m-d H:i:s'); goto JEnXi; kjFKu: $T37uQ['extended'] = TRUE; goto K2XOO; EedTH: if (!($unWcL['status'] !== $KVj0r->gSQPC)) { goto UK5L4; } goto w5Iac; ZDIol: mXXR9: goto kvQoA; hkQtp: if (!(empty($unWcL['extended']) && (!isset($KVj0r->msXPR) || TRUE !== $KVj0r->msXPR))) { goto hHN8F; } goto kjFKu; lJmqS: S4y2J: goto ZDIol; w04BN: if (!(!is_wp_error($E5Iba) && isset($unWcL['status']) && 'valid' === $unWcL['status'])) { goto mXXR9; } goto OpGmJ; kvQoA: fTzFK: goto AQzIT; KXWed: $T37uQ = $unWcL; goto j8vFe; C1nR6: $T37uQ['trial'] = TRUE; goto t2chu; nBFE1: if (!str_contains($XOsrd, 'trial')) { goto BV0YL; } goto nYCeR; LktDf: $E5Iba = Addons::check_license($XOsrd, $unWcL['key']); goto w04BN; Ogr09: if (!(empty($unWcL['expires']) || $unWcL['expires'] !== $KVj0r->bbXa3)) { goto OdMvI; } goto UDiD2; TPTIo: if (!(is_array($EXUdP) && array_key_exists($ZLeLK, $EXUdP))) { goto fTzFK; } goto qnSB2; gHYJV: if (empty(array_diff_assoc($unWcL, $T37uQ))) { goto WxWI2; } goto SjOeT; JEnXi: OdMvI: goto H79xf; w5Iac: $T37uQ['status'] = $KVj0r->gSQPC; goto yeayA; OpGmJ: $KVj0r = json_decode(wp_remote_retrieve_body($E5Iba)); goto KXWed; AQzIT: BV0YL: goto Hcbva; SjOeT: Addons::update_key($XOsrd, $T37uQ); goto rlJpk; rlJpk: WxWI2: goto lJmqS; Hcbva: K0Gti: goto tF9NF; tF9NF: } goto GRdkv; Go21Z: }); } private function show_notices($OM4sX, $TWzhb) { AtumAdminNotices::add_notice($TWzhb, strtolower($OM4sX['name']), 'error', FALSE, TRUE); add_action('after_plugin_row_' . $OM4sX['basename'], function ($r02xV, $rNvTK) use($TWzhb) { goto EI1ye; EI1ye: ?>
			<tr class="plugin-update-tr active">
				<td colspan="4" class="plugin-update colspanchange">
					<div class="notice inline notice-error notice-alt">
						<p><?php  goto amMO8; yrC1Z: echo esc_attr($r02xV); goto KtgRr; KtgRr: ?>"] td { box-shadow: none !important; }</style>
			<?php  goto OT3Oa; MBqM5: echo esc_attr($r02xV); goto jgVv7; iQj9Q: ?></p>
					</div>
				</td>
			</tr>
			<style>tr[data-plugin="<?php  goto MBqM5; amMO8: echo $TWzhb; goto iQj9Q; jgVv7: ?>"] th, tr[data-plugin="<?php  goto yrC1Z; OT3Oa: }, 100, 2); } public static function get_bootstrapped_addons() { return self::$G3CID; } public static function get_non_bootstrapped_addons() { return self::$WHLxh; } public static function check_addon($EXPLw, $XOsrd, $NFRG6) { goto b39Un; UZhA6: return FALSE; goto MbXRC; DTxky: return TRUE; goto JkzSA; b39Un: if (!(stripos($EXPLw, '_trial') === FALSE)) { goto sAU7g; } goto UZhA6; jpqdY: return FALSE; goto WqsnA; AZ6rJ: if (!(stripos($XOsrd, 'Trial') === FALSE)) { goto qrUz8; } goto jpqdY; SW_ti: return FALSE; goto Oek3k; Oek3k: bBoZs: goto DTxky; MbXRC: sAU7g: goto AZ6rJ; WqsnA: qrUz8: goto G5WKL; G5WKL: if (!(stripos($NFRG6, '-trial.php') === FALSE)) { goto bBoZs; } goto SW_ti; JkzSA: } }