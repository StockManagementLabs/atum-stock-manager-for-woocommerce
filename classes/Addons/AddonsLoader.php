<?php
/** @noinspection ALL */
/**
  * ATUM WooCommerce Inventory Management and Stock Tracking
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2023 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $ZPEff = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private $D5ks3 = array('action_logs' => '1.3.8', 'export_pro' => '1.5.8', 'multi_inventory' => '1.8.4', 'product_levels' => '1.9.0', 'purchase_orders' => '1.1.6', 'stock_takes' => '1.0.0', 'pick_pack' => '1.0.0', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private static $bJVGk = []; private static $qtoaW = []; private $dVMwt; public function __construct() { goto sr2G4; gtBzt: foreach ($Ni6Jr as $xFwEY => $XsTFd) { goto v2Zm8; kH6sG: $this->D5ks3[$xFwEY] = $XsTFd; goto K4gsn; v2Zm8: if (!(!array_key_exists($xFwEY, $this->D5ks3) && version_compare($XsTFd, '0.0', '>'))) { goto PtXIW; } goto kH6sG; BJ70T: sK9v_: goto mO0o5; K4gsn: PtXIW: goto BJ70T; mO0o5: } goto P9vnc; P9vnc: kUG7g: goto gI3qO; C6TWs: $Ni6Jr = (array) apply_filters('atum/addons/loader/extra_addons', []); goto bSd9l; PgPJ8: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto hthF_; gI3qO: MtEMQ: goto PgPJ8; sr2G4: $this->dVMwt = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto C6TWs; hthF_: $this->check_addons(); goto m12KD; bSd9l: if (empty($Ni6Jr)) { goto MtEMQ; } goto gtBzt; m12KD: } public function load_addons() { goto Vy96S; Vy96S: $mlKSz = Addons::get_installed_addons(); goto gCcfP; yPFIW: add_action('admin_enqueue_scripts', function () { goto GBgHp; NGI0J: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto zCOkk; C5X7I: wp_register_script('atum-trials-modal', ATUM_URL . 'assets/js/build/atum-trials-modal.js', ['jquery', 'sweetalert2'], ATUM_VERSION, TRUE); goto NGI0J; GBgHp: Helpers::register_swal_scripts(); goto C5X7I; zCOkk: }, 1); goto cbEXx; y2PfI: ZAwk8: goto lNAE4; gCcfP: if (empty($mlKSz)) { goto ZAwk8; } goto ywmhn; NY6kB: $hcz9x->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($LG5gI), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $LG5gI])); goto t3HIw; HJzM2: Addons::set_installed_addons($mlKSz); goto M5lLB; cbEXx: $hcz9x = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto MhIwW; M5lLB: RZImG: goto y2PfI; BJGeg: TJB1U: goto IDLz2; IDLz2: if (empty($LG5gI)) { goto MBcZS; } goto yPFIW; Tr68e: $TfMyV = Addons::get_keys(); goto u5_oX; ywmhn: $LG5gI = []; goto Tr68e; VjDoV: foreach ($mlKSz as $bjJDA => $xpxSj) { goto ZHoPS; Dm91a: $LG5gI[$bjJDA]['extended'] = $TfMyV[$u0ZBo]['extended'] ?? FALSE; goto R2Hxd; tMxmp: if (!$O_0xn) { goto Qpipv; } goto HsnR9; iDzYT: if (isset($this->D5ks3[$OsHC3])) { goto yyyu8; } goto NgMPd; CIX1w: $ADM6i = call_user_func($xpxSj['bootstrap']); goto KekJt; yAIFM: $LG5gI[$bjJDA]['expires'] = $TfMyV[$u0ZBo]['expires'] ?? 'now'; goto HMU_v; yWLTA: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto mazpe; XSNDw: goto cNARM; goto rfh5L; zokSr: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto xm3O3; C4rgE: $RaPtu = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $xpxSj['name']); goto PlE8H; NSsDZ: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto p7wTJ; D2Cmh: $RaPtu = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $xpxSj['name']); goto Kbg1M; g47wy: jCkJJ: goto C4rgE; gWl0N: lVf9Z: goto GYNMV; XltrS: Addons::delete_status_transient($u0ZBo); goto whCYN; tsfHd: if (!version_compare($this->D5ks3[$OsHC3], $xpxSj['version'], '>')) { goto Yxrqh; } goto NWKgF; NgMPd: $RaPtu = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $xpxSj['name']); goto swqw8; rsHq6: $RaPtu = sprintf('trial_used' === $TfMyV[$u0ZBo]['status'] ? __('The ATUM %1$s could not be loaded because it has already been used on another site. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN) : __('The ATUM %1$s could not be loaded because its license is invalid. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN), $xpxSj['name'], '<a href="' . $FfGl0 . '" target="_blank">', '</a>'); goto VQlZs; ZHoPS: $O_0xn = strpos($bjJDA, '_trial') !== FALSE || strpos($xpxSj['basename'], 'trial') !== FALSE; goto T23az; Y06sV: Q_0n3: goto Dw39s; p7wTJ: self::$qtoaW[] = $bjJDA; goto Hs0eM; P6220: $LG5gI[$bjJDA] = $xpxSj; goto yAIFM; xm3O3: self::$qtoaW[] = $bjJDA; goto kpJ9G; HMU_v: $LG5gI[$bjJDA]['key'] = $TfMyV[$u0ZBo]['key']; goto Dm91a; XVMeH: $RaPtu = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $xpxSj['name'], date_i18n(get_option('date_format'), strtotime($TfMyV[$u0ZBo]['expires']))); goto E4XJJ; LyYdG: yyyu8: goto tsfHd; KekJt: if (!(!$ADM6i && !empty($this->ZPEff[$bjJDA]) && version_compare($this->ZPEff[$bjJDA], $xpxSj['version'], '<'))) { goto lVf9Z; } goto q01ei; BdVBD: $RaPtu = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $xpxSj['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto g3_2Q; R2Hxd: if ('now' === $LG5gI[$bjJDA]['expires']) { goto jCkJJ; } goto XVMeH; mzplS: VF2r0: goto iW73h; Cg1uf: $this->show_notices($xpxSj, $RaPtu . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $xpxSj['addon_url'] . '" target="_blank">', '</a>')); goto bpTzQ; ao5kv: goto cNARM; goto Y06sV; T23az: $OsHC3 = $O_0xn ? str_replace('_trial', '', $bjJDA) : $bjJDA; goto RPzEY; rfh5L: csyqr: goto H4yJB; fnfMr: if (!(empty($TfMyV) || empty($TfMyV[$u0ZBo]) || empty($TfMyV[$u0ZBo]['key']))) { goto VF2r0; } goto BdVBD; AMmQD: cNARM: goto grcZr; NrlVe: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto w1Zge; kJjKk: Addons::delete_status_transient($u0ZBo); goto TvryA; VQlZs: $this->show_notices($xpxSj, $RaPtu); goto yWLTA; q01ei: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto XZ0uZ; YU4NP: $EncMH = array('key' => $TfMyV[$u0ZBo]['key'], 'url' => home_url()); goto hGTgL; HsnR9: if (!(isset($mlKSz[$OsHC3]) || !$this->dVMwt && !empty($yBJ33[$OsHC3]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $yBJ33[$OsHC3]['basename']))) { goto Utour; } goto D2Cmh; FO_VG: self::$qtoaW[] = $bjJDA; goto XltrS; PlE8H: fI5RQ: goto Cg1uf; hGTgL: $FfGl0 = add_query_arg($EncMH, Addons::ADDONS_STORE_URL . 'my-upgrades/'); goto rsHq6; whCYN: goto cNARM; goto mzplS; RPzEY: $u0ZBo = strtolower($yBJ33[$OsHC3]['name'] ?? ''); goto iDzYT; Hcdpt: self::$bJVGk[] = $bjJDA; goto CIX1w; TvryA: goto cNARM; goto Lysfy; eX1Sj: if (!(!empty($xpxSj['bootstrap']) && is_callable($xpxSj['bootstrap']))) { goto mmIIo; } goto Hcdpt; kWkiR: self::$qtoaW[] = $bjJDA; goto ao5kv; ivZ84: self::$qtoaW[] = $bjJDA; goto gWl0N; E4XJJ: goto fI5RQ; goto g47wy; XZ0uZ: array_pop(self::$bJVGk); goto ivZ84; kpJ9G: goto cNARM; goto D0rRM; Hs0eM: goto cNARM; goto LyYdG; g3_2Q: $this->show_notices($xpxSj, $RaPtu); goto eG85S; Lysfy: Utour: goto fnfMr; swqw8: $this->show_notices($xpxSj, $RaPtu); goto NSsDZ; w1Zge: self::$qtoaW[] = $bjJDA; goto kJjKk; ZLP1Y: Addons::delete_status_transient($u0ZBo); goto XSNDw; Kbg1M: $this->show_notices($xpxSj, $RaPtu); goto NrlVe; eG85S: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto FO_VG; D0rRM: Yxrqh: goto tMxmp; PwQ2w: $this->show_notices($xpxSj, $RaPtu); goto zokSr; NWKgF: $RaPtu = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $xpxSj['name'], $this->D5ks3[$OsHC3]); goto PwQ2w; H4yJB: if (!(empty($TfMyV[$u0ZBo]['expires']) || strtotime($TfMyV[$u0ZBo]['expires']) <= time())) { goto Q_0n3; } goto P6220; iW73h: if (!in_array($TfMyV[$u0ZBo]['status'], ['trial_used', 'invalid', 'disabled', 'missing', 'key_mismatch'])) { goto csyqr; } goto YU4NP; GYNMV: mmIIo: goto AMmQD; bpTzQ: $mlKSz[$bjJDA]['bootstrap'] = NULL; goto kWkiR; mazpe: self::$qtoaW[] = $bjJDA; goto ZLP1Y; Dw39s: Qpipv: goto eX1Sj; grcZr: } goto BJGeg; u5_oX: $yBJ33 = Addons::get_addons_paths(); goto VjDoV; MhIwW: $hcz9x->set_js_dependencies(['atum-trials-modal']); goto NY6kB; t3HIw: MBcZS: goto u1YOu; u1YOu: if (!(count(self::$qtoaW) > 0)) { goto RZImG; } goto HJzM2; lNAE4: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($yyq8g) { $yyq8g['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $yyq8g; }); add_action('atum/check_addons', function () { goto Q2SAm; CaiYm: gk7uW: goto eCH3d; Q2SAm: $zOVL2 = Addons::get_keys(); goto yzCMn; i_5N4: foreach ($Tluz4 as $vZThp) { goto rfn1L; JZPQG: dJMiO: goto q7hpD; FsW9n: HSUto: goto QH59i; W0AbS: if (!$kiZxX) { goto iZ0yT; } goto qJ8zF; pJbD2: if (!(empty($LzTD4['trial']) && isset($kiZxX->sAcnc) && TRUE === $kiZxX->sAcnc)) { goto DSYgd; } goto XJpEF; H5JMw: if (!(strpos($ArclX, 'trial') !== FALSE)) { goto dJMiO; } goto oN24R; tR63Y: $kiZxX = json_decode(wp_remote_retrieve_body($eA8Z7)); goto n8ulm; QH59i: if (!(empty($LzTD4['expires']) || $LzTD4['expires'] !== $kiZxX->W38Rc)) { goto Mlr_I; } goto GFdj6; FdWWI: iZ0yT: goto yvBOO; hp51Z: tRvDh: goto JZPQG; aWYSB: DSYgd: goto rGkAi; xhAX9: xzzH5: goto uSqsZ; qxf9j: $mo9ey = TRUE; goto z3ep6; q7hpD: wimPp: goto kgv9l; oN24R: $u0ZBo = trim(str_replace('trial', '', $ArclX)); goto UWeH2; XJpEF: $RShRg['trial'] = TRUE; goto aWYSB; UWeH2: if (!(is_array($zOVL2) && array_key_exists($u0ZBo, $zOVL2))) { goto tRvDh; } goto qxf9j; GFdj6: $RShRg['expires'] = $kiZxX->W38Rc ?? date_i18n('Y-m-d H:i:s'); goto Vne8u; uSqsZ: if (empty(array_diff_assoc($LzTD4, $RShRg))) { goto ApeoK; } goto y4Hwj; TkP5N: ApeoK: goto FdWWI; rfn1L: $ArclX = strtolower($vZThp['name']); goto H5JMw; UW2Eo: $RShRg['extended'] = TRUE; goto xhAX9; Vne8u: Mlr_I: goto pJbD2; y4Hwj: Addons::update_key($ArclX, $RShRg); goto TkP5N; rGkAi: if (!(empty($LzTD4['extended']) && (!isset($kiZxX->pT0MZ) || TRUE !== $kiZxX->pT0MZ))) { goto xzzH5; } goto UW2Eo; yvBOO: Inh1j: goto hp51Z; kZlew: $RShRg['status'] = $kiZxX->yHUGy; goto FsW9n; z3ep6: $LzTD4 = $zOVL2[$u0ZBo]; goto P1mxt; n8ulm: $RShRg = $LzTD4; goto W0AbS; P1mxt: $eA8Z7 = Addons::check_license($ArclX, $LzTD4['key']); goto aYsoD; aYsoD: if (!(!is_wp_error($eA8Z7) && isset($LzTD4['status']) && 'valid' === $LzTD4['status'])) { goto Inh1j; } goto tR63Y; qJ8zF: if (!($LzTD4['status'] !== $kiZxX->yHUGy)) { goto HSUto; } goto kZlew; kgv9l: } goto W9FVj; cowEb: r_aI3: goto nKi2t; T2mXU: if (!$mo9ey) { goto gk7uW; } goto QQk1T; wYURC: return; goto cowEb; yzCMn: $Tluz4 = Addons::get_installed_addons(); goto rX9aG; W9FVj: fkDPL: goto T2mXU; QQk1T: Addons::set_last_api_access('check_addons'); goto CaiYm; nKi2t: $mo9ey = FALSE; goto i_5N4; rX9aG: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto r_aI3; } goto wYURC; eCH3d: }); } private function show_notices($xpxSj, $RaPtu) { AtumAdminNotices::add_notice($RaPtu, strtolower($xpxSj['name']), 'error', FALSE, TRUE); add_action('after_plugin_row_' . $xpxSj['basename'], function ($n9uck, $ytJd1) use($RaPtu) { goto P0XQ_; FJEaM: ?>"] td { box-shadow: none !important; }</style>
			<?php  goto pVDsv; wrIJM: ?></p>
					</div>
				</td>
			</tr>
			<style>tr[data-plugin="<?php  goto Z6nIE; KGePN: echo $RaPtu; goto wrIJM; Z6nIE: echo esc_attr($n9uck); goto L91SL; dYMHV: echo esc_attr($n9uck); goto FJEaM; P0XQ_: ?>
			<tr class="plugin-update-tr active">
				<td colspan="4" class="plugin-update colspanchange">
					<div class="notice inline notice-error notice-alt">
						<p><?php  goto KGePN; L91SL: ?>"] th, tr[data-plugin="<?php  goto dYMHV; pVDsv: }, 100, 2); } public static function get_bootstrapped_addons() { return self::$bJVGk; } public static function get_non_bootstrapped_addons() { return self::$qtoaW; } public static function check_addon($xFwEY, $ArclX, $o9SRF) { goto b78pj; AwnSi: if (!(stripos($o9SRF, '-trial.php') === FALSE)) { goto vLmqK; } goto FB6oq; DQOjJ: if (!(stripos($ArclX, 'Trial') === FALSE)) { goto QSKC8; } goto onQJ4; FB6oq: return FALSE; goto V3aBW; acvtA: return FALSE; goto MuT6u; V3aBW: vLmqK: goto NfPRp; KFWnZ: QSKC8: goto AwnSi; b78pj: if (!(stripos($xFwEY, '_trial') === FALSE)) { goto BF308; } goto acvtA; onQJ4: return FALSE; goto KFWnZ; NfPRp: return TRUE; goto Tu1Pe; MuT6u: BF308: goto DQOjJ; Tu1Pe: } }