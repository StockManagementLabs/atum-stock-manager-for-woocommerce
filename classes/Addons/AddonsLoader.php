<?php
/** @noinspection ALL */
/**
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2023 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $XOzYx = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1'); private $b3R15 = array('action_logs' => '1.3.5', 'export_pro' => '1.5.5', 'multi_inventory' => '1.8.0', 'product_levels' => '1.8.7.1', 'purchase_orders' => '1.1.1', 'stock_takes' => '1.0.0', 'pick_pack' => '1.0.0', 'barcodes_pro' => '0.0.1'); private static $TbmfL = []; private static $WzHpV = []; private $fNIv9; public function __construct() { goto Nq_Jy; V1o8k: LH7vk: goto JkeS2; N5rtK: if (empty($t7tbU)) { goto LH7vk; } goto IaSKD; cwrP0: $this->check_addons(); goto gjYjA; JkeS2: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto cwrP0; OTwct: $t7tbU = (array) apply_filters('atum/addons/loader/extra_addons', []); goto N5rtK; Nq_Jy: $this->fNIv9 = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto OTwct; IaSKD: foreach ($t7tbU as $xCPCY => $wDSXo) { goto x_kDw; KX1wD: $this->b3R15[$xCPCY] = $wDSXo; goto xq_cG; bw311: v0DJi: goto wuLP9; xq_cG: bM7ED: goto bw311; x_kDw: if (!(!array_key_exists($xCPCY, $this->b3R15) && version_compare($wDSXo, '0.0', '>'))) { goto bM7ED; } goto KX1wD; wuLP9: } goto AVOLN; AVOLN: E_GAI: goto V1o8k; gjYjA: } public function load_addons() { goto EnbtD; KecLG: foreach ($JwC1W as $eeEwT => $Jkpt_) { goto pGosK; mLr5G: $JwC1W[$eeEwT]['bootstrap'] = NULL; goto qLV7o; W9Nxt: if (!(!$ZeGoS && !empty($this->XOzYx[$eeEwT]) && version_compare($this->XOzYx[$eeEwT], $Jkpt_['version'], '<'))) { goto aDTwL; } goto nJxIH; eVIXx: $S6YnT = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $Jkpt_['name']); goto MwuW1; WL__2: AtumAdminNotices::add_notice($S6YnT . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $Jkpt_['addon_url'] . '" target="_blank">', '</a>'), strtolower($Jkpt_['name']), 'error', FALSE, TRUE); goto oDUxP; DEY5E: $nM_qa[$eeEwT]['extended'] = $L8gxR[$p7DqT]['extended'] ?? FALSE; goto h8pt8; MwuW1: AtumAdminNotices::add_notice($S6YnT, strtolower($Jkpt_['name']), 'error', FALSE, TRUE); goto K1vbZ; blAL2: self::$WzHpV[] = $eeEwT; goto m0vcr; KIFgO: $S6YnT = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $Jkpt_['name']); goto CIMQV; UK6IB: goto XwZI6; goto QACtb; iOZxA: goto XwZI6; goto ApMed; xOK3z: if (!$W32ED) { goto xRIDK; } goto XmqGs; m0vcr: aDTwL: goto qULvq; jhsTu: $nM_qa[$eeEwT]['expires'] = $L8gxR[$p7DqT]['expires'] ?? 'now'; goto UgnLC; qFsHT: xRIDK: goto PMiq1; bYNTW: $p7DqT = strtolower($uHCOC[$SXjNI]['name'] ?? ''); goto Oygx2; K1vbZ: $JwC1W[$eeEwT]['bootstrap'] = NULL; goto yBGLV; cJex3: goto XwZI6; goto r1aZe; KfA7v: $JwC1W[$eeEwT]['bootstrap'] = NULL; goto jx31I; PMiq1: if (!(!empty($Jkpt_['bootstrap']) && is_callable($Jkpt_['bootstrap']))) { goto qycMZ; } goto rO830; XmqGs: if (!(isset($JwC1W[$SXjNI]) || !$this->fNIv9 && !empty($uHCOC[$SXjNI]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $uHCOC[$SXjNI]['basename']))) { goto R7bjH; } goto eVIXx; Y10TS: AtumAdminNotices::add_notice($S6YnT, strtolower($Jkpt_['name']), 'error', FALSE, TRUE); goto TPZEo; UgnLC: $nM_qa[$eeEwT]['key'] = $L8gxR[$p7DqT]['key']; goto DEY5E; oDUxP: $JwC1W[$eeEwT]['bootstrap'] = NULL; goto GrMJQ; yyFfr: $SXjNI = $W32ED ? str_replace('_trial', '', $eeEwT) : $eeEwT; goto uiIZ_; qLV7o: self::$WzHpV[] = $eeEwT; goto mokaM; kGqY0: $S6YnT = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $Jkpt_['name'], $this->b3R15[$SXjNI]); goto m4WGq; UpNql: self::$WzHpV[] = $eeEwT; goto iOZxA; h8pt8: if ('now' === $nM_qa[$eeEwT]['expires']) { goto kQRIf; } goto uHKm2; mokaM: goto XwZI6; goto M0yew; jx31I: self::$WzHpV[] = $eeEwT; goto bA_R3; bA_R3: goto XwZI6; goto e9Ru5; TPZEo: $JwC1W[$eeEwT]['bootstrap'] = NULL; goto UpNql; Puey5: if (!(empty($L8gxR[$p7DqT]['expires']) || strtotime($L8gxR[$p7DqT]['expires']) <= time())) { goto A1IkK; } goto thgsX; QACtb: A1IkK: goto qFsHT; uiIZ_: if (isset($this->b3R15[$SXjNI])) { goto HU8mI; } goto E5AUY; E5AUY: $S6YnT = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $Jkpt_['name']); goto hKet8; rO830: self::$TbmfL[] = $eeEwT; goto lzmcZ; thgsX: $nM_qa[$eeEwT] = $Jkpt_; goto jhsTu; hKet8: AtumAdminNotices::add_notice($S6YnT, strtolower($Jkpt_['name']), 'error', FALSE, TRUE); goto KfA7v; e9Ru5: HU8mI: goto D0uP8; pGosK: $W32ED = strpos($eeEwT, '_trial') !== FALSE || strpos($Jkpt_['basename'], 'trial') !== FALSE; goto yyFfr; u5Dbc: kQRIf: goto KIFgO; GrMJQ: self::$WzHpV[] = $eeEwT; goto UK6IB; Nw2OU: array_pop(self::$TbmfL); goto blAL2; gfLuh: XwZI6: goto YaOwC; O3YES: goto gGj26; goto u5Dbc; nJxIH: $JwC1W[$eeEwT]['bootstrap'] = NULL; goto Nw2OU; r1aZe: R7bjH: goto bYNTW; ZUKPG: $S6YnT = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $Jkpt_['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto Y10TS; m4WGq: AtumAdminNotices::add_notice($S6YnT, strtolower($Jkpt_['name']), 'error', FALSE, TRUE); goto mLr5G; lzmcZ: $ZeGoS = call_user_func($Jkpt_['bootstrap']); goto W9Nxt; yBGLV: self::$WzHpV[] = $eeEwT; goto cJex3; D0uP8: if (!version_compare($this->b3R15[$SXjNI], $Jkpt_['version'], '>')) { goto mA853; } goto kGqY0; ApMed: cd3Xv: goto Puey5; M0yew: mA853: goto xOK3z; qULvq: qycMZ: goto gfLuh; Oygx2: if (!(empty($L8gxR) || empty($L8gxR[$p7DqT]) || empty($L8gxR[$p7DqT]['key']))) { goto cd3Xv; } goto ZUKPG; CIMQV: gGj26: goto WL__2; uHKm2: $S6YnT = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $Jkpt_['name'], date_i18n(get_option('date_format'), strtotime($L8gxR[$p7DqT]['expires']))); goto O3YES; YaOwC: } goto ELBPV; ELBPV: qvNGk: goto egrQ1; cjo9c: $IQFo1->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($nM_qa), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $nM_qa])); goto ndsqS; Yx_s2: if (!(count(self::$WzHpV) > 0)) { goto DuVr7; } goto ONOQs; aiLs5: $IQFo1 = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto NB2zn; FGVZh: wp_register_script('atum-trials-modal', ATUM_URL . 'assets/js/build/atum-trials-modal.js', ['jquery', 'sweetalert2'], ATUM_VERSION, TRUE); goto gp58P; EnbtD: $JwC1W = Addons::get_installed_addons(); goto oyo9e; gp58P: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto aiLs5; ndsqS: pJV66: goto Yx_s2; IAbn9: $uHCOC = Addons::get_addons_paths(); goto KecLG; NB2zn: $IQFo1->set_js_dependencies(['atum-trials-modal']); goto cjo9c; uhaQf: $nM_qa = []; goto gQmG0; gQmG0: $L8gxR = Addons::get_keys(); goto IAbn9; egrQ1: if (empty($nM_qa)) { goto pJV66; } goto FGVZh; oyo9e: if (empty($JwC1W)) { goto pFvPP; } goto uhaQf; PmWUD: DuVr7: goto k_WiT; k_WiT: pFvPP: goto PzTVS; ONOQs: Addons::set_installed_addons($JwC1W); goto PmWUD; PzTVS: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($hQ5Fo) { $hQ5Fo['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $hQ5Fo; }); add_action('atum/check_addons', function () { goto Rk0Xz; Rk0Xz: $H4w21 = Addons::get_keys(); goto ZFJIb; kZESK: if (!$B1xrA) { goto dRetL; } goto ZoLLm; ZoLLm: self::set_last_api_access('check_addons'); goto uZoQ1; ug0NK: $B1xrA = FALSE; goto eqtEx; uZoQ1: dRetL: goto Hy4LE; eqtEx: foreach ($R120P as $wSJf9) { goto AuMGW; r223q: $XnBuj['trial'] = TRUE; goto Ut4pu; z2B8l: qx9R9: goto wnBY7; dv3OJ: $XnBuj = $XRNTn; goto vdr1Q; l_8b_: $XRNTn = $H4w21[$p7DqT]; goto f5MHC; Gtm_4: $XnBuj['status'] = $zuOka->daFxo; goto KVssI; Ut4pu: qda1v: goto CCMgM; O2U0A: gtxgc: goto rtxKr; EbfkT: $zuOka = json_decode(wp_remote_retrieve_body($ktxOl)); goto dv3OJ; wnBY7: MQeuB: goto O2U0A; uRLSk: N8sJL: goto LSFiE; MvRvp: if (!(strpos($jY1k0, 'trial') !== FALSE)) { goto MQeuB; } goto vnpxK; YH40V: KKb4f: goto uRLSk; KzRwX: Addons::update_key($jY1k0, $XnBuj); goto YH40V; CCMgM: if (!(empty($XRNTn['extended']) && (!isset($zuOka->WhBNQ) || TRUE !== $zuOka->WhBNQ))) { goto DcfWB; } goto UpqQ_; i4WNR: if (!array_key_exists($H4w21[$p7DqT])) { goto qx9R9; } goto SdnQb; UpqQ_: $XnBuj['extended'] = TRUE; goto t95df; LSFiE: sC31o: goto z2B8l; wZsGj: k7mn_: goto EOynZ; jSRPm: if (empty(array_diff_assoc($XRNTn, $XnBuj))) { goto KKb4f; } goto KzRwX; vnpxK: $p7DqT = trim(str_replace('trial', '', $jY1k0)); goto i4WNR; SdnQb: $B1xrA = TRUE; goto l_8b_; EOynZ: if (!(empty($XRNTn['trial']) && isset($zuOka->RTbh5) && TRUE === $zuOka->RTbh5)) { goto qda1v; } goto r223q; QToLj: if (!(!is_wp_error($ktxOl) && isset($XRNTn['status']) && 'valid' === $XRNTn['status'])) { goto sC31o; } goto EbfkT; yxSoh: if (!($XRNTn['status'] !== $zuOka->daFxo)) { goto bbEwM; } goto Gtm_4; IrcrX: if (!(empty($XRNTn['expires']) || $XRNTn['expires'] !== $zuOka->XFW_2)) { goto k7mn_; } goto NaY4x; NaY4x: $XnBuj['expires'] = $zuOka->XFW_2 ?? date_i18n('Y-m-d H:i:s'); goto wZsGj; vdr1Q: if (!$zuOka) { goto N8sJL; } goto yxSoh; t95df: DcfWB: goto jSRPm; KVssI: bbEwM: goto IrcrX; AuMGW: $jY1k0 = strtolower($wSJf9['name']); goto MvRvp; f5MHC: $ktxOl = Addons::check_license($jY1k0, $XRNTn['key']); goto QToLj; rtxKr: } goto zMmMf; TnS0o: S_wEF: goto ug0NK; aXZXu: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto S_wEF; } goto rqgzd; zMmMf: Dak53: goto kZESK; ZFJIb: $R120P = Addons::get_installed_addons(); goto aXZXu; rqgzd: return; goto TnS0o; Hy4LE: }); } public static function get_bootstrapped_addons() { return self::$TbmfL; } public static function get_non_bootstrapped_addons() { return self::$WzHpV; } public static function check_addon($xCPCY, $jY1k0, $de0TM) { goto tqtNF; D36R5: u093y: goto XcwhY; k_Cxd: iif3E: goto mbcFI; T_Mjk: x_Pf2: goto Tw6gH; OCM38: return FALSE; goto k_Cxd; mbcFI: return TRUE; goto e47Z3; hOPF0: return FALSE; goto T_Mjk; Xdcob: return FALSE; goto D36R5; XcwhY: if (!(stripos($de0TM, '-trial.php') === FALSE)) { goto iif3E; } goto OCM38; Tw6gH: if (!(stripos($jY1k0, 'Trial') === FALSE)) { goto u093y; } goto Xdcob; tqtNF: if (!(stripos($xCPCY, '_trial') === FALSE)) { goto x_Pf2; } goto hOPF0; e47Z3: } }