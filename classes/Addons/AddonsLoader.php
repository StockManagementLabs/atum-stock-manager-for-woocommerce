<?php
/** @noinspection ALL */
/**
  * ATUM WooCommerce Inventory Management and Stock Tracking
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2024 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Components\AtumAssets; use Atum\Inc\Helpers; final class AddonsLoader { private $tTRQ3 = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private $lwkxu = array('action_logs' => '1.3.8', 'export_pro' => '1.5.8', 'multi_inventory' => '1.8.4', 'product_levels' => '1.9.0', 'purchase_orders' => '1.1.6', 'stock_takes' => '1.0.0', 'pick_pack' => '1.0.0', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private static $yqaly = []; private static $NoxUe = []; private $HPPKT; public function __construct() { goto fir8Y; kA9U9: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto QQJd4; a5B2K: if (empty($xKErM)) { goto ErSqi; } goto KnxqR; VdLVD: iTxH3: goto vflD4; QQJd4: $this->check_addons(); goto xEGAm; vflD4: ErSqi: goto kA9U9; fir8Y: $this->HPPKT = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto QMOqn; KnxqR: foreach ($xKErM as $Z7jF1 => $pGT9K) { goto pp1b3; pp1b3: if (!(!array_key_exists($Z7jF1, $this->lwkxu) && version_compare($pGT9K, '0.0', '>'))) { goto wR4sy; } goto h0bWK; h0bWK: $this->lwkxu[$Z7jF1] = $pGT9K; goto oTpZ6; cwdvx: nb6gt: goto tsDoR; oTpZ6: wR4sy: goto cwdvx; tsDoR: } goto VdLVD; QMOqn: $xKErM = (array) apply_filters('atum/addons/loader/extra_addons', []); goto a5B2K; xEGAm: } public function load_addons() { goto XuGtW; IROKi: $lXBnB->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($pwnY3), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $pwnY3])); goto e7ayI; ogIO9: $pwnY3 = []; goto bWr2v; TZrHo: FsEbr: goto JMREB; e7ayI: rA99x: goto Vcuzp; bWr2v: $V4mwq = Addons::get_keys(); goto mQI6I; ovVLR: $lXBnB = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto BcAWG; QJjcM: Addons::set_installed_addons($JDxEL); goto vRNLL; BcAWG: $lXBnB->set_js_dependencies(['atum-trials-modal']); goto IROKi; dVDwE: if (empty($JDxEL)) { goto FsEbr; } goto ogIO9; XuGtW: $JDxEL = Addons::get_installed_addons(); goto dVDwE; UMdRF: foreach ($JDxEL as $PFfrb => $P9_6P) { goto l3P0T; xwBgQ: gjWVS: goto SbEuI; GwSby: goto pnNZW; goto DhIKc; jY4be: self::$NoxUe[] = $PFfrb; goto eKKh4; PniwO: self::$NoxUe[] = $PFfrb; goto L60Ab; ngGTR: Bproa: goto GrINr; Rk3LF: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto okVGM; BG9Yw: array_pop(self::$yqaly); goto jY4be; u_2aV: if (!(empty($V4mwq[$g4itC]['expires']) || strtotime($V4mwq[$g4itC]['expires']) <= time())) { goto tXORA; } goto D9w2Z; Ui6Ot: TP5bM: goto aHdhv; GAo3o: if (!(!$qWbWQ && !empty($this->tTRQ3[$PFfrb]) && version_compare($this->tTRQ3[$PFfrb], $P9_6P['version'], '<'))) { goto wvFgI; } goto bwGhl; k4Kq4: tXORA: goto MGjEb; Cb00M: if (!$RPteQ) { goto RifpN; } goto BN2sX; kX5C_: goto pnNZW; goto xwBgQ; oX5oP: $dY8bA = add_query_arg($bjiTK, Addons::ADDONS_STORE_URL . 'my-upgrades/'); goto AOESB; d7AOg: $PWXKt = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $P9_6P['name']); goto BVKIP; adC2I: $pwnY3[$PFfrb]['expires'] = $V4mwq[$g4itC]['expires'] ?? 'now'; goto yMx8n; okOmJ: goto q2eNf; goto axNmG; BN2sX: if (!(isset($JDxEL[$bqDT1]) || !$this->HPPKT && !empty($PGjJa[$bqDT1]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $PGjJa[$bqDT1]['basename']))) { goto gjWVS; } goto RthRb; EnYFo: self::$NoxUe[] = $PFfrb; goto mZsJG; bwGhl: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto BG9Yw; MGjEb: RifpN: goto nURjs; cpJx4: goto pnNZW; goto ppTOi; bNtuG: $PWXKt = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $P9_6P['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto JGXHY; JGXHY: $this->show_notices($P9_6P, $PWXKt); goto UcYJ9; AVuaM: $PWXKt = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $P9_6P['name'], $this->lwkxu[$bqDT1]); goto BV7q4; RIH_o: self::$NoxUe[] = $PFfrb; goto TI3eY; SbEuI: if (!(empty($V4mwq) || empty($V4mwq[$g4itC]) || empty($V4mwq[$g4itC]['key']))) { goto kTgjg; } goto bNtuG; QyG1Y: Addons::delete_status_transient($g4itC); goto cpJx4; RthRb: $PWXKt = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $P9_6P['name']); goto Whq1V; myxUh: $bqDT1 = $RPteQ ? str_replace('_trial', '', $PFfrb) : $PFfrb; goto znOpG; qHarz: As8kr: goto Cb00M; BV7q4: $this->show_notices($P9_6P, $PWXKt); goto TWMdL; axNmG: oz6ml: goto d7AOg; mZsJG: goto pnNZW; goto k4Kq4; BVKIP: q2eNf: goto HXj5g; GrINr: pnNZW: goto wpTGJ; L60Ab: goto pnNZW; goto qHarz; Whq1V: $this->show_notices($P9_6P, $PWXKt); goto Rk3LF; DhIKc: kTgjg: goto osErD; UcYJ9: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto VTfvU; Hu2vu: $qWbWQ = call_user_func($P9_6P['bootstrap']); goto GAo3o; TI3eY: goto pnNZW; goto Ui6Ot; K_j4z: Addons::delete_status_transient($g4itC); goto GwSby; HReZ6: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto R4lrp; qx101: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto RIH_o; l3P0T: $RPteQ = strpos($PFfrb, '_trial') !== FALSE || strpos($P9_6P['basename'], 'trial') !== FALSE; goto myxUh; ppTOi: NFMtM: goto u_2aV; yMx8n: $pwnY3[$PFfrb]['key'] = $V4mwq[$g4itC]['key']; goto NRxV5; znOpG: $g4itC = strtolower($PGjJa[$bqDT1]['name'] ?? ''); goto jFMRT; TWMdL: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto PniwO; aHdhv: if (!version_compare($this->lwkxu[$bqDT1], $P9_6P['version'], '>')) { goto As8kr; } goto AVuaM; HXj5g: $this->show_notices($P9_6P, $PWXKt . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $P9_6P['addon_url'] . '" target="_blank">', '</a>')); goto VE3GQ; nURjs: if (!(!empty($P9_6P['bootstrap']) && is_callable($P9_6P['bootstrap']))) { goto Bproa; } goto lxWc1; xhmzu: $PWXKt = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $P9_6P['name']); goto MXYuc; osErD: if (!in_array($V4mwq[$g4itC]['status'], ['trial_used', 'invalid', 'disabled', 'missing', 'key_mismatch'])) { goto NFMtM; } goto RLveN; RLveN: $bjiTK = array('key' => $V4mwq[$g4itC]['key'], 'url' => home_url()); goto oX5oP; VTfvU: self::$NoxUe[] = $PFfrb; goto K_j4z; r7d0X: $this->show_notices($P9_6P, $PWXKt); goto HReZ6; nJt8B: Addons::delete_status_transient($g4itC); goto kX5C_; eKKh4: wvFgI: goto ngGTR; D9w2Z: $pwnY3[$PFfrb] = $P9_6P; goto adC2I; MXYuc: $this->show_notices($P9_6P, $PWXKt); goto qx101; VE3GQ: $JDxEL[$PFfrb]['bootstrap'] = NULL; goto EnYFo; NRxV5: $pwnY3[$PFfrb]['extended'] = $V4mwq[$g4itC]['extended'] ?? FALSE; goto aD9jD; okVGM: self::$NoxUe[] = $PFfrb; goto nJt8B; AOESB: $PWXKt = sprintf('trial_used' === $V4mwq[$g4itC]['status'] ? __('The ATUM %1$s could not be loaded because it has already been used on another site. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN) : __('The ATUM %1$s could not be loaded because its license is invalid. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN), $P9_6P['name'], '<a href="' . $dY8bA . '" target="_blank">', '</a>'); goto r7d0X; jFMRT: if (isset($this->lwkxu[$bqDT1])) { goto TP5bM; } goto xhmzu; R4lrp: self::$NoxUe[] = $PFfrb; goto QyG1Y; tb6MX: $PWXKt = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $P9_6P['name'], date_i18n(get_option('date_format'), strtotime($V4mwq[$g4itC]['expires']))); goto okOmJ; aD9jD: if ('now' === $pwnY3[$PFfrb]['expires']) { goto oz6ml; } goto tb6MX; lxWc1: self::$yqaly[] = $PFfrb; goto Hu2vu; wpTGJ: } goto pS0HL; vRNLL: Mlw_D: goto TZrHo; pS0HL: WWE49: goto EtvlX; mQI6I: $PGjJa = Addons::get_addons_paths(); goto UMdRF; EtvlX: if (empty($pwnY3)) { goto rA99x; } goto nx6VJ; nx6VJ: add_action('admin_enqueue_scripts', function () { goto ELfC9; ELfC9: Helpers::register_swal_scripts(); goto Bf7gL; QgO_A: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto kC9KD; Bf7gL: AtumAssets::register_script('atum-trials-modal', ATUM_URL, 'trials-modal', ATUM_SCRIPT_PREFIX, ['jquery', 'sweetalert2'], ATUM_VERSION); goto QgO_A; kC9KD: }, 1); goto ovVLR; Vcuzp: if (!(count(self::$NoxUe) > 0)) { goto Mlw_D; } goto QJjcM; JMREB: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($LN_e9) { $LN_e9['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $LN_e9; }); add_action('atum/check_addons', function () { goto eGTFQ; UIKTM: $dlN6y = FALSE; goto ceTtk; Od2nl: ceV7M: goto UIKTM; bHC_l: ZPnwG: goto KlicR; xnwvU: return; goto Od2nl; Gn_qL: if (!$dlN6y) { goto ZPnwG; } goto oYFzJ; LxkoR: $yXJi8 = Addons::get_installed_addons(); goto u5g7l; u5g7l: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto ceV7M; } goto xnwvU; ceTtk: foreach ($yXJi8 as $WSyAD) { goto pogCd; lulQS: $smYeh = json_decode(wp_remote_retrieve_body($QozU2)); goto tsz0p; AcrQE: if (!(strpos($hnOEz, 'trial') !== FALSE)) { goto s6Ttc; } goto YVw2S; U25AG: $P8kxG['extended'] = TRUE; goto Rmj2t; c8pMD: Bfy7J: goto L_vlx; ZbftE: if (!(empty($rZN4U['expires']) || $rZN4U['expires'] !== $smYeh->DBuRa)) { goto Z_loD; } goto lfOsK; uhYHt: if (!($rZN4U['status'] !== $smYeh->MY_Tu)) { goto qU6ys; } goto CMNrr; R5jab: $QozU2 = Addons::check_license($hnOEz, $rZN4U['key']); goto yg6vn; yg6vn: if (!(!is_wp_error($QozU2) && isset($rZN4U['status']) && 'valid' === $rZN4U['status'])) { goto ALsUf; } goto lulQS; qXrXx: $P8kxG['trial'] = TRUE; goto PvM7O; c2lhZ: OszOa: goto c8pMD; tsz0p: $P8kxG = $rZN4U; goto EHWul; L_vlx: ALsUf: goto HfLqj; lfOsK: $P8kxG['expires'] = $smYeh->DBuRa ?? date_i18n('Y-m-d H:i:s'); goto KBQkx; PWrDW: if (empty(array_diff_assoc($rZN4U, $P8kxG))) { goto OszOa; } goto Y_a3Z; YVw2S: $g4itC = trim(str_replace('trial', '', $hnOEz)); goto sbC4f; PvM7O: TfrY7: goto gP5yF; HfLqj: NErA1: goto CKfXF; Rmj2t: H2IG5: goto PWrDW; gP5yF: if (!(empty($rZN4U['extended']) && (!isset($smYeh->TUDFv) || TRUE !== $smYeh->TUDFv))) { goto H2IG5; } goto U25AG; Y_a3Z: Addons::update_key($hnOEz, $P8kxG); goto c2lhZ; CKfXF: s6Ttc: goto Ai6ZD; CMNrr: $P8kxG['status'] = $smYeh->MY_Tu; goto qZAq8; EHWul: if (!$smYeh) { goto Bfy7J; } goto uhYHt; OjoYQ: $rZN4U = $ZYXeA[$g4itC]; goto R5jab; pogCd: $hnOEz = strtolower($WSyAD['name']); goto AcrQE; sbC4f: if (!(is_array($ZYXeA) && array_key_exists($g4itC, $ZYXeA))) { goto NErA1; } goto q6M8r; qZAq8: qU6ys: goto ZbftE; KBQkx: Z_loD: goto aWAzK; Ai6ZD: lmh_8: goto YjRps; aWAzK: if (!(empty($rZN4U['trial']) && isset($smYeh->AShbZ) && TRUE === $smYeh->AShbZ)) { goto TfrY7; } goto qXrXx; q6M8r: $dlN6y = TRUE; goto OjoYQ; YjRps: } goto RX2kU; oYFzJ: Addons::set_last_api_access('check_addons'); goto bHC_l; RX2kU: YgeU8: goto Gn_qL; eGTFQ: $ZYXeA = Addons::get_keys(); goto LxkoR; KlicR: }); } private function show_notices($P9_6P, $PWXKt) { AtumAdminNotices::add_notice($PWXKt, strtolower($P9_6P['name']), 'error', FALSE, TRUE); add_action('after_plugin_row_' . $P9_6P['basename'], function ($K5VyL, $YUEKH) use($PWXKt) { goto qoeye; qoeye: ?>
			<tr class="plugin-update-tr active">
				<td colspan="4" class="plugin-update colspanchange">
					<div class="notice inline notice-error notice-alt">
						<p><?php  goto yCpVg; lvgXa: echo esc_attr($K5VyL); goto q_8g7; k8jV7: ?></p>
					</div>
				</td>
			</tr>
			<style>tr[data-plugin="<?php  goto JLB48; q_8g7: ?>"] td { box-shadow: none !important; }</style>
			<?php  goto wLrHe; yCpVg: echo $PWXKt; goto k8jV7; YOkDf: ?>"] th, tr[data-plugin="<?php  goto lvgXa; JLB48: echo esc_attr($K5VyL); goto YOkDf; wLrHe: }, 100, 2); } public static function get_bootstrapped_addons() { return self::$yqaly; } public static function get_non_bootstrapped_addons() { return self::$NoxUe; } public static function check_addon($Z7jF1, $hnOEz, $snKvw) { goto wxLO_; IsnPL: return FALSE; goto c8XGf; bbbfy: if (!(stripos($snKvw, '-trial.php') === FALSE)) { goto dcacs; } goto qOABM; wxLO_: if (!(stripos($Z7jF1, '_trial') === FALSE)) { goto HehaD; } goto ZoXjb; ZoXjb: return FALSE; goto YXyV2; yNaS8: return TRUE; goto pfWQn; rVLix: if (!(stripos($hnOEz, 'Trial') === FALSE)) { goto fqYLE; } goto IsnPL; p2zSn: dcacs: goto yNaS8; c8XGf: fqYLE: goto bbbfy; YXyV2: HehaD: goto rVLix; qOABM: return FALSE; goto p2zSn; pfWQn: } }