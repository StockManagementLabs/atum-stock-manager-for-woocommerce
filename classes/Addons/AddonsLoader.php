<?php
/** @noinspection ALL */
/**
  * ATUM WooCommerce Inventory Management and Stock Tracking
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2025 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $IzS66 = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private $WeqqD = array('action_logs' => '1.3.8', 'export_pro' => '1.6.5', 'multi_inventory' => '1.9.5', 'product_levels' => '1.9.9', 'purchase_orders' => '1.2.5', 'stock_takes' => '1.0.7', 'pick_pack' => '1.0.9', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.2.0'); private static $irntK = []; private static $PV7so = []; private $dZ2Fm; public function __construct() { goto Sj5JB; IJ8jS: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto BrevT; Kt7qf: if (empty($ccEX7)) { goto xMLnu; } goto TUBkx; TUBkx: foreach ($ccEX7 as $EIkdL => $zpqqP) { goto LWjGk; gdQJ0: $this->WeqqD[$EIkdL] = $zpqqP; goto tizbH; LWjGk: if (!(!array_key_exists($EIkdL, $this->WeqqD) && version_compare($zpqqP, '0.0', '>'))) { goto DJgc6; } goto gdQJ0; ckiEz: T5zmf: goto ZM3jE; tizbH: DJgc6: goto ckiEz; ZM3jE: } goto VQAfS; Sj5JB: $this->dZ2Fm = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto nFPQ2; BrevT: $this->check_addons(); goto jJepF; VQAfS: DQEGg: goto iJWiG; iJWiG: xMLnu: goto IJ8jS; nFPQ2: $ccEX7 = (array) apply_filters('atum/addons/loader/extra_addons', []); goto Kt7qf; jJepF: } public function load_addons() { goto UYb7i; llsQe: g6zlU: goto Sn0CJ; uDhPs: cIp3O: goto iikrL; SDnX3: mGfmQ: goto uDhPs; tkkd9: $ovXsW = Addons::get_addons_paths(); goto gaH43; cvu1I: if (empty($mbfoA)) { goto cIp3O; } goto GVI6O; UYb7i: $mbfoA = Addons::get_installed_addons(); goto cvu1I; HJTC5: Addons::set_installed_addons($mbfoA); goto SDnX3; GVI6O: $gUgY8 = []; goto GSzAV; oQqts: $BwTsF->set_js_dependencies(['atum-trials-modal']); goto gF6Ar; Sn0CJ: if (empty($gUgY8)) { goto SuvD8; } goto fB8n2; GSzAV: $iQA4K = Addons::get_keys(); goto tkkd9; nd2gC: SuvD8: goto No2b2; gaH43: foreach ($mbfoA as $Xizuf => $t_v5v) { goto R5MHX; bMOUJ: if (!$lYlqo) { goto giKVF; } goto rxp4R; zIckl: self::$PV7so[] = $Xizuf; goto PmGZ6; rG0Pb: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto HIohQ; vMXuX: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto DNNWW; L1ZVM: self::$PV7so[] = $Xizuf; goto VIwbY; J2k0M: goto NUaKp; goto dPCpC; SvSTT: $gUgY8[$Xizuf]['key'] = $iQA4K[$qpETn]['key']; goto W7SAU; VIwbY: Addons::delete_status_transient($qpETn); goto m3dEd; aCrEo: BZyey: goto R1QXe; ll6XU: giKVF: goto Dm5sV; aKaen: mcbHZ: goto jV7G6; jV7G6: ThSka: goto zhU5Z; R5MHX: $lYlqo = str_contains($Xizuf, '_trial') || str_contains($t_v5v['basename'], 'trial'); goto aMvls; XlzqE: if (!in_array($iQA4K[$qpETn]['status'], ['trial_used', 'invalid', 'disabled', 'missing', 'key_mismatch'])) { goto BZyey; } goto is1Zt; Q2F5Z: $dV0H8 = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $t_v5v['name'], $this->WeqqD[$Y_7zc]); goto JACOZ; Cgg1S: $gUgY8[$Xizuf] = $t_v5v; goto bhR6w; Q4alA: self::$PV7so[] = $Xizuf; goto aKaen; ZJ7mp: $dV0H8 = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $t_v5v['name'], date_i18n(get_option('date_format'), strtotime($iQA4K[$qpETn]['expires']))); goto J2k0M; oo5Ml: $dV0H8 = sprintf(__('The ATUM %s could not be loaded because the full version is installed. Please, uninstall this trial and enable the full version.', ATUM_TEXT_DOMAIN), $t_v5v['name']); goto tNKEa; G0rGQ: $this->show_notices($t_v5v, $dV0H8); goto xiK32; xulIF: goto YhknD; goto XBdfl; Vwbat: Addons::delete_status_transient($qpETn); goto NzKmQ; sk9Db: $this->show_notices($t_v5v, $dV0H8); goto rG0Pb; W7SAU: $gUgY8[$Xizuf]['extended'] = $iQA4K[$qpETn]['extended'] ?? FALSE; goto x_VVN; eBspR: if (!version_compare($this->WeqqD[$Y_7zc], $t_v5v['version'], '>')) { goto S6vu_; } goto Q2F5Z; x4XlK: self::$PV7so[] = $Xizuf; goto l4iUl; x_VVN: if ('now' === $gUgY8[$Xizuf]['expires']) { goto ujTcA; } goto ZJ7mp; syn58: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto zIckl; HfsCd: NUaKp: goto EU5pP; iKZ2A: nwvUF: goto eBspR; bPd29: $qpETn = strtolower($ovXsW[$Y_7zc]['name'] ?? ''); goto Wpn7i; Dm5sV: if (!(!empty($t_v5v['bootstrap']) && is_callable($t_v5v['bootstrap']))) { goto ThSka; } goto PDXrB; PmGZ6: Addons::delete_status_transient($qpETn); goto xulIF; zhU5Z: YhknD: goto AwdxM; RGogL: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto x4XlK; dIcvH: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto SQrG3; fUccN: $bM5xE = call_user_func($t_v5v['bootstrap']); goto BtsxO; EU5pP: $this->show_notices($t_v5v, $dV0H8 . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $t_v5v['addon_url'] . '" target="_blank">', '</a>')); goto z5wVd; yr1QU: goto YhknD; goto Xt44D; NzKmQ: goto YhknD; goto aCrEo; ivTu6: $dV0H8 = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $t_v5v['name']); goto HfsCd; A9h8Q: $dV0H8 = sprintf('trial_used' === $iQA4K[$qpETn]['status'] ? __('The ATUM %1$s could not be loaded because it has already been used on another site. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN) : __('The ATUM %1$s could not be loaded because its license is invalid. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN), $t_v5v['name'], '<a href="' . $hCdAL . '" target="_blank">', '</a>'); goto sk9Db; is1Zt: $hZ0qB = array('key' => $iQA4K[$qpETn]['key'], 'url' => home_url()); goto k68Py; rxp4R: if (!(isset($mbfoA[$Y_7zc]) || !$this->dZ2Fm && !empty($ovXsW[$Y_7zc]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $ovXsW[$Y_7zc]['basename']))) { goto GIB2a; } goto oo5Ml; dPCpC: ujTcA: goto ivTu6; sLcjy: self::$PV7so[] = $Xizuf; goto fkSGh; XBdfl: GIB2a: goto KVrK8; iDCLt: $dV0H8 = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $t_v5v['name']); goto GXkd9; bhR6w: $gUgY8[$Xizuf]['expires'] = $iQA4K[$qpETn]['expires'] ?? 'now'; goto SvSTT; BtsxO: if (!(!$bM5xE && !empty($this->IzS66[$Xizuf]) && version_compare($this->IzS66[$Xizuf], $t_v5v['version'], '<'))) { goto mcbHZ; } goto vMXuX; SQrG3: self::$PV7so[] = $Xizuf; goto yr1QU; lxY6C: hV9Xo: goto ll6XU; Wpn7i: if (isset($this->WeqqD[$Y_7zc])) { goto nwvUF; } goto iDCLt; tNKEa: $this->show_notices($t_v5v, $dV0H8); goto syn58; l4iUl: goto YhknD; goto iKZ2A; HIohQ: self::$PV7so[] = $Xizuf; goto Vwbat; k68Py: $hCdAL = add_query_arg($hZ0qB, Addons::ADDONS_STORE_URL . 'my-upgrades/'); goto A9h8Q; FaJq3: AN1rx: goto XlzqE; R1QXe: if (!(empty($iQA4K[$qpETn]['expires']) || strtotime($iQA4K[$qpETn]['expires']) <= time())) { goto hV9Xo; } goto Cgg1S; Xt44D: S6vu_: goto bMOUJ; PDXrB: self::$irntK[] = $Xizuf; goto fUccN; fIcXp: $dV0H8 = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $t_v5v['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto G0rGQ; fkSGh: goto YhknD; goto lxY6C; xiK32: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto L1ZVM; JACOZ: $this->show_notices($t_v5v, $dV0H8); goto dIcvH; GXkd9: $this->show_notices($t_v5v, $dV0H8); goto RGogL; m3dEd: goto YhknD; goto FaJq3; z5wVd: $mbfoA[$Xizuf]['bootstrap'] = NULL; goto sLcjy; aMvls: $Y_7zc = $lYlqo ? str_replace('_trial', '', $Xizuf) : $Xizuf; goto bPd29; DNNWW: array_pop(self::$irntK); goto Q4alA; KVrK8: if (!(empty($iQA4K) || empty($iQA4K[$qpETn]) || empty($iQA4K[$qpETn]['key']))) { goto AN1rx; } goto fIcXp; AwdxM: } goto llsQe; z2lA3: $BwTsF = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto oQqts; fB8n2: add_action('admin_enqueue_scripts', function () { goto X3PEZ; lQhtB: wp_register_script('atum-trials-modal', ATUM_URL . 'assets/js/build/atum-trials-modal.js', ['jquery', 'sweetalert2'], ATUM_VERSION, TRUE); goto DOvJK; DOvJK: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto UTJCm; X3PEZ: Helpers::register_swal_scripts(); goto lQhtB; UTJCm: }, 1); goto z2lA3; gF6Ar: $BwTsF->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($gUgY8), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $gUgY8])); goto nd2gC; No2b2: if (!(count(self::$PV7so) > 0)) { goto mGfmQ; } goto HJTC5; iikrL: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($rL843) { $rL843['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $rL843; }); add_action('atum/check_addons', function () { goto YcP5D; UnwtP: $ZmvXc = FALSE; goto PgScp; YxSuL: xF1EJ: goto d3Ofm; HbNEC: if (!$ZmvXc) { goto xF1EJ; } goto nOw8P; j1ncR: LAg22: goto HbNEC; PgScp: foreach ($wzTbe as $aORp0) { goto Zntiu; ARG_4: if (!(empty($oi7Kn['trial']) && isset($uXiEs->F2N39) && TRUE === $uXiEs->F2N39)) { goto IFI1E; } goto aR77B; z82Ue: $mTiv2['extended'] = TRUE; goto G1KFK; EVKLh: if (!(is_array($tV9CU) && array_key_exists($qpETn, $tV9CU))) { goto IxMsb; } goto Q483d; WmQ_G: if (!($uXiEs && !empty($uXiEs->S8w4o))) { goto bNDTW; } goto MMDW0; Fpxt5: UCgOX: goto oV1mZ; H_Gde: IFI1E: goto dn8h6; SWc8X: GIC72: goto rp4sh; oV1mZ: vgt7X: goto NJq9y; QSgHP: $mTiv2['status'] = $uXiEs->S8w4o; goto LlA2r; ik3XN: bNDTW: goto SWc8X; iVJbV: QAQJQ: goto ik3XN; tVp86: $SJ1RQ = Addons::check_license($OK0NX, $oi7Kn['key']); goto slrNQ; uimCw: $oi7Kn = $tV9CU[$qpETn]; goto tVp86; im0vf: $uXiEs = json_decode(wp_remote_retrieve_body($SJ1RQ)); goto k5h3K; MMDW0: if (!($oi7Kn['status'] !== $uXiEs->S8w4o)) { goto TslHz; } goto QSgHP; zdH8R: $qpETn = trim(str_replace('trial', '', $OK0NX)); goto EVKLh; dn8h6: if (!(empty($oi7Kn['extended']) && (!isset($uXiEs->rt3fV) || TRUE !== $uXiEs->rt3fV))) { goto nlQFB; } goto z82Ue; Zntiu: $OK0NX = strtolower($aORp0['name']); goto luxxG; luxxG: if (!str_contains($OK0NX, 'trial')) { goto UCgOX; } goto zdH8R; txGtY: Addons::update_key($OK0NX, $mTiv2); goto iVJbV; G1KFK: nlQFB: goto nF7n4; slrNQ: if (!(!is_wp_error($SJ1RQ) && isset($oi7Kn['status']) && 'valid' === $oi7Kn['status'])) { goto GIC72; } goto im0vf; Q483d: $ZmvXc = TRUE; goto uimCw; DMPT5: if (!(empty($oi7Kn['expires']) || $oi7Kn['expires'] !== $uXiEs->m32tc)) { goto uBSsN; } goto EyNBz; rp4sh: IxMsb: goto Fpxt5; uwQ5b: uBSsN: goto ARG_4; nF7n4: if (empty(array_diff_assoc($oi7Kn, $mTiv2))) { goto QAQJQ; } goto txGtY; k5h3K: $mTiv2 = $oi7Kn; goto WmQ_G; LlA2r: TslHz: goto DMPT5; EyNBz: $mTiv2['expires'] = $uXiEs->m32tc ?? date_i18n('Y-m-d H:i:s'); goto uwQ5b; aR77B: $mTiv2['trial'] = TRUE; goto H_Gde; NJq9y: } goto j1ncR; r52my: return; goto xYAbc; DRVkT: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto B8Vbu; } goto r52my; nOw8P: Addons::set_last_api_access('check_addons'); goto YxSuL; YcP5D: $tV9CU = Addons::get_keys(); goto PozcE; PozcE: $wzTbe = Addons::get_installed_addons(); goto DRVkT; xYAbc: B8Vbu: goto UnwtP; d3Ofm: }); } private function show_notices($t_v5v, $dV0H8) { AtumAdminNotices::add_notice($dV0H8, strtolower($t_v5v['name']), 'error', FALSE, TRUE); add_action('after_plugin_row_' . $t_v5v['basename'], function ($VQhwd, $f4Ekk) use($dV0H8) { goto APkqL; APkqL: ?>
			<tr class="plugin-update-tr active">
				<td colspan="4" class="plugin-update colspanchange">
					<div class="notice inline notice-error notice-alt">
						<p><?php  goto rV4j3; oy7V8: echo esc_attr($VQhwd); goto LDN_W; LDN_W: ?>"] th, tr[data-plugin="<?php  goto UCGs3; UCGs3: echo esc_attr($VQhwd); goto MctiS; rV4j3: echo $dV0H8; goto m_FCZ; MctiS: ?>"] td { box-shadow: none !important; }</style>
			<?php  goto w7L26; m_FCZ: ?></p>
					</div>
				</td>
			</tr>
			<style>tr[data-plugin="<?php  goto oy7V8; w7L26: }, 100, 2); } public static function get_bootstrapped_addons() { return self::$irntK; } public static function get_non_bootstrapped_addons() { return self::$PV7so; } public static function check_addon($EIkdL, $OK0NX, $dzUBW) { goto PNr1n; V0556: if (!(stripos($OK0NX, 'Trial') === FALSE)) { goto aHmGD; } goto s8Tdz; sid8I: return TRUE; goto J2HSE; s8Tdz: return FALSE; goto wuvis; UZ2Ze: MSZR5: goto V0556; PNr1n: if (!(stripos($EIkdL, '_trial') === FALSE)) { goto MSZR5; } goto nwl1X; jvSr2: return FALSE; goto Gj4Op; nwl1X: return FALSE; goto UZ2Ze; wuvis: aHmGD: goto m1JUj; Gj4Op: t3R5x: goto sid8I; m1JUj: if (!(stripos($dzUBW, '-trial.php') === FALSE)) { goto t3R5x; } goto jvSr2; J2HSE: } }