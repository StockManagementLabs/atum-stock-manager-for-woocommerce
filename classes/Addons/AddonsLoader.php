<?php
/** @noinspection ALL */
/**
  * ATUM WooCommerce Inventory Management and Stock Tracking
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2023 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $I8JY9 = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1'); private $O_IhV = array('action_logs' => '1.3.5', 'export_pro' => '1.5.5', 'multi_inventory' => '1.8.0', 'product_levels' => '1.8.7.1', 'purchase_orders' => '1.1.2', 'stock_takes' => '1.0.0', 'pick_pack' => '1.0.0', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1'); private static $xMYbI = []; private static $TZlci = []; private $l6AXd; public function __construct() { goto l18XZ; l18XZ: $this->l6AXd = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto UsFXI; MbaLL: EIhUs: goto l6kai; UsFXI: $bUA_7 = (array) apply_filters('atum/addons/loader/extra_addons', []); goto K5aut; RO8Oq: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto y3mRC; y3mRC: $this->check_addons(); goto r8IHE; h0bcM: foreach ($bUA_7 as $Gbevl => $aNhr8) { goto CuTzi; lSd3a: CODIN: goto HCR1q; CuTzi: if (!(!array_key_exists($Gbevl, $this->O_IhV) && version_compare($aNhr8, '0.0', '>'))) { goto CODIN; } goto pEdRD; HCR1q: Bk_EB: goto TQ46H; pEdRD: $this->O_IhV[$Gbevl] = $aNhr8; goto lSd3a; TQ46H: } goto MbaLL; l6kai: rKc3g: goto RO8Oq; K5aut: if (empty($bUA_7)) { goto rKc3g; } goto h0bcM; r8IHE: } public function load_addons() { goto tZ9M4; Yo1iR: zz84Q: goto LIMy0; HUrkZ: $T9oR2 = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto xfUuo; l_fMm: H0e8j: goto Yo1iR; TjkY2: foreach ($AC0nK as $hYpNY => $GU8Ad) { goto Farva; nXBC0: $xzI2l = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $GU8Ad['name']); goto cEQLp; mtazL: rbzDu: goto SH9eF; xC6kt: $this->show_notices($GU8Ad, $xzI2l); goto Y3I5j; fx81u: $this->show_notices($GU8Ad, $xzI2l); goto ngG8V; EjCl0: Addons::delete_status_transient($B3mkE); goto yEKj4; TG3q8: if (!in_array($dk910[$B3mkE]['status'], ['trial_used', 'invalid', 'disabled', 'missing', 'key_mismatch'])) { goto TSl4Q; } goto LcwhG; wks3V: self::$TZlci[] = $hYpNY; goto Lhg0t; ngG8V: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto EWXeg; egpt2: self::$TZlci[] = $hYpNY; goto zv3G2; x4GL3: Addons::delete_status_transient($B3mkE); goto Fqb1o; X50Zx: if (!(isset($AC0nK[$BY0Cb]) || !$this->l6AXd && !empty($U1F_Y[$BY0Cb]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $U1F_Y[$BY0Cb]['basename']))) { goto smKaM; } goto pzQzQ; FVYxh: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto jZ_p4; CLVvy: if (!(empty($dk910) || empty($dk910[$B3mkE]) || empty($dk910[$B3mkE]['key']))) { goto m3CEW; } goto aYgnH; hT024: $qJr58 = add_query_arg($hrYca, Addons::ADDONS_STORE_URL . 'my-upgrades/'); goto LcQGj; rK9NA: h446A: goto oJpxD; gU_uN: goto DZ4Q3; goto xE4Lx; p0pMa: $this->show_notices($GU8Ad, $xzI2l); goto JP6WS; Kgu3V: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto tGWOZ; rL96l: if (!$gzefY) { goto eePd8; } goto X50Zx; I26Z5: $qimq5[$hYpNY]['expires'] = $dk910[$B3mkE]['expires'] ?? 'now'; goto mqMaT; McmAc: if (!(!empty($GU8Ad['bootstrap']) && is_callable($GU8Ad['bootstrap']))) { goto y2GOb; } goto KkdmW; haZzi: Addons::delete_status_transient($B3mkE); goto Dm8i5; Jc6Xb: if (!version_compare($this->O_IhV[$BY0Cb], $GU8Ad['version'], '>')) { goto Z113O; } goto OLZhc; XhWii: goto rbzDu; goto rK9NA; jtkto: $qimq5[$hYpNY]['extended'] = $dk910[$B3mkE]['extended'] ?? FALSE; goto wYNy7; g2Y8F: m3CEW: goto TG3q8; cxghh: $xzI2l = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $GU8Ad['name'], date_i18n(get_option('date_format'), strtotime($dk910[$B3mkE]['expires']))); goto XhWii; EWXeg: self::$TZlci[] = $hYpNY; goto haZzi; nVABo: self::$TZlci[] = $hYpNY; goto x4GL3; xE4Lx: D3fHK: goto cd2_7; xekPz: y2GOb: goto h8463; jZ_p4: self::$TZlci[] = $hYpNY; goto gU_uN; DjAKD: $B3mkE = strtolower($U1F_Y[$BY0Cb]['name'] ?? ''); goto X7Daj; LcQGj: $xzI2l = sprintf('trial_used' === $dk910[$B3mkE]['status'] ? __('The ATUM %1$s could not be loaded because it has already been used on another site. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN) : __('The ATUM %1$s could not be loaded because its license is invalid. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN), $GU8Ad['name'], '<a href="' . $qJr58 . '" target="_blank">', '</a>'); goto xC6kt; cd2_7: eePd8: goto McmAc; evsMC: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto wks3V; h8463: DZ4Q3: goto Jhill; X7Daj: if (isset($this->O_IhV[$BY0Cb])) { goto QTzFE; } goto nXBC0; pzQzQ: $xzI2l = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $GU8Ad['name']); goto p0pMa; AHPvQ: Z113O: goto rL96l; KkdmW: self::$xMYbI[] = $hYpNY; goto vvxdp; wYNy7: if ('now' === $qimq5[$hYpNY]['expires']) { goto h446A; } goto cxghh; yEKj4: goto DZ4Q3; goto sHkNV; zv3G2: QOKnD: goto xekPz; mqMaT: $qimq5[$hYpNY]['key'] = $dk910[$B3mkE]['key']; goto jtkto; HJBCP: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto qwYb2; Dm8i5: goto DZ4Q3; goto g2Y8F; M1Xet: QTzFE: goto Jc6Xb; oJpxD: $xzI2l = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $GU8Ad['name']); goto mtazL; sHkNV: TSl4Q: goto yLirL; OLZhc: $xzI2l = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $GU8Ad['name'], $this->O_IhV[$BY0Cb]); goto aBkN6; Fqb1o: goto DZ4Q3; goto Rtqmn; x4Cqt: $qimq5[$hYpNY] = $GU8Ad; goto I26Z5; yLirL: if (!(empty($dk910[$B3mkE]['expires']) || strtotime($dk910[$B3mkE]['expires']) <= time())) { goto D3fHK; } goto x4Cqt; Farva: $gzefY = strpos($hYpNY, '_trial') !== FALSE || strpos($GU8Ad['basename'], 'trial') !== FALSE; goto PFGK2; aYgnH: $xzI2l = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $GU8Ad['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto fx81u; LcwhG: $hrYca = array('key' => $dk910[$B3mkE]['key'], 'url' => home_url()); goto hT024; cEQLp: $this->show_notices($GU8Ad, $xzI2l); goto evsMC; JP6WS: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto nVABo; R8CXS: self::$TZlci[] = $hYpNY; goto EjCl0; qwYb2: self::$TZlci[] = $hYpNY; goto n2ufi; SH9eF: $this->show_notices($GU8Ad, $xzI2l . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $GU8Ad['addon_url'] . '" target="_blank">', '</a>')); goto FVYxh; n2ufi: goto DZ4Q3; goto AHPvQ; aBkN6: $this->show_notices($GU8Ad, $xzI2l); goto HJBCP; Rtqmn: smKaM: goto CLVvy; PFGK2: $BY0Cb = $gzefY ? str_replace('_trial', '', $hYpNY) : $hYpNY; goto DjAKD; vvxdp: $ZkiL9 = call_user_func($GU8Ad['bootstrap']); goto s_9GM; s_9GM: if (!(!$ZkiL9 && !empty($this->I8JY9[$hYpNY]) && version_compare($this->I8JY9[$hYpNY], $GU8Ad['version'], '<'))) { goto QOKnD; } goto Kgu3V; tGWOZ: array_pop(self::$xMYbI); goto egpt2; Y3I5j: $AC0nK[$hYpNY]['bootstrap'] = NULL; goto R8CXS; Lhg0t: goto DZ4Q3; goto M1Xet; Jhill: } goto Rax3J; xjkJ2: wp_register_script('atum-trials-modal', ATUM_URL . 'assets/js/build/atum-trials-modal.js', ['jquery', 'sweetalert2'], ATUM_VERSION, TRUE); goto PqwS4; nHbqW: $qimq5 = []; goto bRTBq; Y5AP7: if (empty($AC0nK)) { goto zz84Q; } goto nHbqW; d4vs_: if (!(count(self::$TZlci) > 0)) { goto H0e8j; } goto fX5q9; HbqYy: $U1F_Y = Addons::get_addons_paths(); goto TjkY2; PqwS4: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto HUrkZ; bRTBq: $dk910 = Addons::get_keys(); goto HbqYy; fX5q9: Addons::set_installed_addons($AC0nK); goto l_fMm; sh4s3: if (empty($qimq5)) { goto KBRVe; } goto xjkJ2; DnvDX: KBRVe: goto d4vs_; tZ9M4: $AC0nK = Addons::get_installed_addons(); goto Y5AP7; M5Lfb: $T9oR2->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($qimq5), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $qimq5])); goto DnvDX; xfUuo: $T9oR2->set_js_dependencies(['atum-trials-modal']); goto M5Lfb; Rax3J: d6zLv: goto sh4s3; LIMy0: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($M3puH) { $M3puH['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $M3puH; }); add_action('atum/check_addons', function () { goto eLH83; V_Glk: return; goto dUiNL; dUiNL: cXnkY: goto QJ_kR; f1wOP: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto cXnkY; } goto V_Glk; KS4A6: JWJEd: goto TYPeq; qT5rs: $aofF1 = Addons::get_installed_addons(); goto f1wOP; v4yh4: Addons::set_last_api_access('check_addons'); goto KS4A6; zQoqC: if (!$tk3Le) { goto JWJEd; } goto v4yh4; eLH83: $Z7pVy = Addons::get_keys(); goto qT5rs; QJ_kR: $tk3Le = FALSE; goto E3F7I; E3F7I: foreach ($aofF1 as $S0ogy) { goto WlNIq; kgBB3: inquJ: goto Dh5Cm; i8UYp: if (!(empty($tzBSx['trial']) && isset($gSl0U->Sru2e) && TRUE === $gSl0U->Sru2e)) { goto exmy0; } goto EmdPZ; h35gy: $tzBSx = $Z7pVy[$B3mkE]; goto uX5Nw; VWLKS: if (!(strpos($O1xQW, 'trial') !== FALSE)) { goto s_K6b; } goto X08F8; eBfy0: Wu5qs: goto SI3dY; b1kkO: ePGzL: goto kgBB3; qNek8: $gSl0U = json_decode(wp_remote_retrieve_body($MQQkZ)); goto ZReAz; SI3dY: if (empty(array_diff_assoc($tzBSx, $RnYuV))) { goto c2tVZ; } goto aV4Fm; OHoqs: $tk3Le = TRUE; goto h35gy; rEi1o: Yp37O: goto b1kkO; WlNIq: $O1xQW = strtolower($S0ogy['name']); goto VWLKS; Q0Swe: c2tVZ: goto rEi1o; q71z1: if (!(empty($tzBSx['expires']) || $tzBSx['expires'] !== $gSl0U->N46Lc)) { goto lM49h; } goto xnkVm; ZReAz: $RnYuV = $tzBSx; goto AWZfo; cbrwh: $RnYuV['status'] = $gSl0U->qY2RE; goto oZa2A; VQ84_: lM49h: goto i8UYp; cdQrJ: r06ey: goto LWL9O; X08F8: $B3mkE = trim(str_replace('trial', '', $O1xQW)); goto lOPCs; AWZfo: if (!$gSl0U) { goto Yp37O; } goto yTr5X; lOPCs: if (!(is_array($Z7pVy) && array_key_exists($B3mkE, $Z7pVy))) { goto inquJ; } goto OHoqs; xnkVm: $RnYuV['expires'] = $gSl0U->N46Lc ?? date_i18n('Y-m-d H:i:s'); goto VQ84_; aSfJW: if (!(empty($tzBSx['extended']) && (!isset($gSl0U->x7SDF) || TRUE !== $gSl0U->x7SDF))) { goto Wu5qs; } goto He4V9; oZa2A: tTxKV: goto q71z1; yTr5X: if (!($tzBSx['status'] !== $gSl0U->qY2RE)) { goto tTxKV; } goto cbrwh; HYiwM: exmy0: goto aSfJW; uX5Nw: $MQQkZ = Addons::check_license($O1xQW, $tzBSx['key']); goto htgxb; Dh5Cm: s_K6b: goto cdQrJ; EmdPZ: $RnYuV['trial'] = TRUE; goto HYiwM; aV4Fm: Addons::update_key($O1xQW, $RnYuV); goto Q0Swe; htgxb: if (!(!is_wp_error($MQQkZ) && isset($tzBSx['status']) && 'valid' === $tzBSx['status'])) { goto ePGzL; } goto qNek8; He4V9: $RnYuV['extended'] = TRUE; goto eBfy0; LWL9O: } goto vquPE; vquPE: ANA0T: goto zQoqC; TYPeq: }); } private function show_notices($GU8Ad, $xzI2l) { AtumAdminNotices::add_notice($xzI2l, strtolower($GU8Ad['name']), 'error', FALSE, TRUE); add_action('after_plugin_row_' . $GU8Ad['basename'], function ($oUV1P, $mXDzG) use($xzI2l) { goto kwE06; kwE06: ?>
			<tr class="plugin-update-tr active">
				<td colspan="4" class="plugin-update colspanchange">
					<div class="notice inline notice-error notice-alt">
						<p><?php  goto vQU01; lbcaM: echo esc_attr($oUV1P); goto OV1ne; M8S5_: echo esc_attr($oUV1P); goto e8pB_; e8pB_: ?>"] td { box-shadow: none !important; }</style>
			<?php  goto P5ZeM; vQU01: echo $xzI2l; goto JOlNq; JOlNq: ?></p>
					</div>
				</td>
			</tr>
			<style>tr[data-plugin="<?php  goto lbcaM; OV1ne: ?>"] th, tr[data-plugin="<?php  goto M8S5_; P5ZeM: }, 100, 2); } public static function get_bootstrapped_addons() { return self::$xMYbI; } public static function get_non_bootstrapped_addons() { return self::$TZlci; } public static function check_addon($Gbevl, $O1xQW, $WfUSX) { goto FzRSL; a5WD9: XWb1U: goto j6tTJ; x_Cyj: if (!(stripos($O1xQW, 'Trial') === FALSE)) { goto XWb1U; } goto vPEF8; TSQ0Q: giq2H: goto x_Cyj; FzRSL: if (!(stripos($Gbevl, '_trial') === FALSE)) { goto giq2H; } goto GyUo4; GyUo4: return FALSE; goto TSQ0Q; vPEF8: return FALSE; goto a5WD9; j6tTJ: if (!(stripos($WfUSX, '-trial.php') === FALSE)) { goto lSNgc; } goto YUhqy; L23MV: return TRUE; goto SMgHi; vsCMW: lSNgc: goto L23MV; YUhqy: return FALSE; goto vsCMW; SMgHi: } }