<?php
/** @noinspection ALL */
/**
  * ATUM WooCommerce Inventory Management and Stock Tracking
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2024 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $UMKNG = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private $IHD2S = array('action_logs' => '1.3.8', 'export_pro' => '1.5.8', 'multi_inventory' => '1.8.4', 'product_levels' => '1.9.0', 'purchase_orders' => '1.1.6', 'stock_takes' => '1.0.0', 'pick_pack' => '1.0.0', 'barcodes_pro' => '0.0.1', 'units_of_measure' => '0.0.1', 'cost_price' => '0.0.1'); private static $oeEj_ = []; private static $ER6LZ = []; private $rPGY0; public function __construct() { goto Yen4s; WDSqh: $this->check_addons(); goto AdKHT; rJm37: $tl6rr = (array) apply_filters('atum/addons/loader/extra_addons', []); goto eY4VE; AV6dD: TbDBb: goto WDnMc; fwU_c: foreach ($tl6rr as $H8C7T => $MRBeO) { goto E4bbH; Fqr9h: rbjgY: goto hRUMU; PY84S: $this->IHD2S[$H8C7T] = $MRBeO; goto Fqr9h; E4bbH: if (!(!array_key_exists($H8C7T, $this->IHD2S) && version_compare($MRBeO, '0.0', '>'))) { goto rbjgY; } goto PY84S; hRUMU: OpJ0i: goto m9sus; m9sus: } goto xBaa7; xBaa7: x27Ni: goto AV6dD; Yen4s: $this->rPGY0 = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto rJm37; WDnMc: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto WDSqh; eY4VE: if (empty($tl6rr)) { goto TbDBb; } goto fwU_c; AdKHT: } public function load_addons() { goto FgSjZ; LeUOL: JTNsn: goto kj1ay; pB_pI: $GG41J = Addons::get_keys(); goto D_AXu; fz1PB: eyqvB: goto Xu4xW; cAFb_: $SVBX9->set_js_dependencies(['atum-trials-modal']); goto WDmEH; Xu4xW: if (empty($BVKyj)) { goto JTNsn; } goto RCcCg; FgSjZ: $bBwcp = Addons::get_installed_addons(); goto ug67k; EU4hX: Bn0SX: goto dcdIH; pRk6X: J3dO4: goto EU4hX; tgkUR: $SVBX9 = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto cAFb_; KMu3a: $BVKyj = []; goto pB_pI; WDmEH: $SVBX9->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($BVKyj), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/en/atum-core/atum-trials" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $BVKyj])); goto LeUOL; RCcCg: add_action('admin_enqueue_scripts', function () { goto udsFH; CN6yw: wp_localize_script('atum-trials-modal', 'atumTrialsModal', array('cancel' => __('Cancel', ATUM_TEXT_DOMAIN), 'extend' => __('Yes, Extend it!', ATUM_TEXT_DOMAIN), 'nonce' => wp_create_nonce(ATUM_PREFIX . 'manage_license'), 'ok' => __('OK', ATUM_TEXT_DOMAIN), 'success' => __('Success!', ATUM_TEXT_DOMAIN), 'trialExtension' => __('Trial extension', ATUM_TEXT_DOMAIN), 'trialWillExtend' => __('You are going to extend this trial for 7 days more', ATUM_TEXT_DOMAIN))); goto ghHo1; kPb2e: wp_register_script('atum-trials-modal', ATUM_URL . 'assets/js/build/atum-trials-modal.js', ['jquery', 'sweetalert2'], ATUM_VERSION, TRUE); goto CN6yw; udsFH: Helpers::register_swal_scripts(); goto kPb2e; ghHo1: }, 1); goto tgkUR; LB6cR: foreach ($bBwcp as $psqCd => $U4vC1) { goto f94Jt; jtqv9: $this->show_notices($U4vC1, $Veeje . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $U4vC1['addon_url'] . '" target="_blank">', '</a>')); goto kLnBL; wIOw9: $Veeje = sprintf('trial_used' === $GG41J[$E35oE]['status'] ? __('The ATUM %1$s could not be loaded because it has already been used on another site. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN) : __('The ATUM %1$s could not be loaded because its license is invalid. Please, %2$supgrade to the full version%3$s.', ATUM_TEXT_DOMAIN), $U4vC1['name'], '<a href="' . $SOWkN . '" target="_blank">', '</a>'); goto q7CoF; XO0lw: rvJL9: goto jtqv9; bjGWZ: self::$ER6LZ[] = $psqCd; goto V10QK; H1iXa: $rbh6L = call_user_func($U4vC1['bootstrap']); goto JyBh8; FcZYT: $this->show_notices($U4vC1, $Veeje); goto bwODp; Ip0fQ: $BVKyj[$psqCd] = $U4vC1; goto MqwSi; MySTm: dJKJx: goto QVDoj; MqwSi: $BVKyj[$psqCd]['expires'] = $GG41J[$E35oE]['expires'] ?? 'now'; goto p6yG7; XcGko: $YSHOW = $tn318 ? str_replace('_trial', '', $psqCd) : $psqCd; goto CN6k6; w3ya9: $Veeje = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $U4vC1['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto Sdp5u; vvZ_z: pMUL5: goto GF4lD; xtKUF: self::$ER6LZ[] = $psqCd; goto UTv3O; YyJGG: self::$ER6LZ[] = $psqCd; goto fSyeE; bMFq8: L63_a: goto XEdgp; zV5Pg: $BVKyj[$psqCd]['extended'] = $GG41J[$E35oE]['extended'] ?? FALSE; goto ZALyp; UTv3O: goto RisN7; goto FzO7Z; Z8S0R: Z64di: goto kZ1CO; JyBh8: if (!(!$rbh6L && !empty($this->UMKNG[$psqCd]) && version_compare($this->UMKNG[$psqCd], $U4vC1['version'], '<'))) { goto J7l8y; } goto tNSFZ; nG2tI: if (!(empty($GG41J) || empty($GG41J[$E35oE]) || empty($GG41J[$E35oE]['key']))) { goto pMUL5; } goto w3ya9; QVDoj: if (!$tn318) { goto Lk0vB; } goto ZfSP0; BHNHv: if (isset($this->IHD2S[$YSHOW])) { goto lSBwi; } goto pICH2; KiwtJ: $this->show_notices($U4vC1, $Veeje); goto oN0gl; ix1pg: Addons::delete_status_transient($E35oE); goto goB5q; jptS0: goto rvJL9; goto Z8S0R; f94Jt: $tn318 = strpos($psqCd, '_trial') !== FALSE || strpos($U4vC1['basename'], 'trial') !== FALSE; goto XcGko; evtqC: self::$ER6LZ[] = $psqCd; goto NpbJ0; nb6L2: self::$oeEj_[] = $psqCd; goto H1iXa; FzO7Z: SQ5VB: goto B1LBj; V10QK: goto RisN7; goto eieap; XEdgp: if (!(empty($GG41J[$E35oE]['expires']) || strtotime($GG41J[$E35oE]['expires']) <= time())) { goto SQ5VB; } goto Ip0fQ; MA_2a: Addons::delete_status_transient($E35oE); goto H1N7F; goB5q: goto RisN7; goto A9lCu; eieap: lSBwi: goto E7Kv4; YdNi0: $bBwcp[$psqCd]['bootstrap'] = NULL; goto JR2Jg; GMUaK: RisN7: goto CFgqb; p6yG7: $BVKyj[$psqCd]['key'] = $GG41J[$E35oE]['key']; goto zV5Pg; H1N7F: goto RisN7; goto bMFq8; YLJBv: $Veeje = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $U4vC1['name']); goto ZZuUz; sUzZy: QZUPx: goto GMUaK; ubYKj: $Veeje = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $U4vC1['name'], date_i18n(get_option('date_format'), strtotime($GG41J[$E35oE]['expires']))); goto jptS0; UfyGQ: $SOWkN = add_query_arg($MWTFK, Addons::ADDONS_STORE_URL . 'my-upgrades/'); goto wIOw9; kLnBL: $bBwcp[$psqCd]['bootstrap'] = NULL; goto xtKUF; kZ1CO: $Veeje = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $U4vC1['name']); goto XO0lw; fSyeE: Addons::delete_status_transient($E35oE); goto YatHV; ZZuUz: $this->show_notices($U4vC1, $Veeje); goto kMekA; B1LBj: Lk0vB: goto TaReG; wwKLI: array_pop(self::$oeEj_); goto evtqC; bwODp: $bBwcp[$psqCd]['bootstrap'] = NULL; goto q1S_Q; VrBBv: $Veeje = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $U4vC1['name'], $this->IHD2S[$YSHOW]); goto FcZYT; ZfSP0: if (!(isset($bBwcp[$YSHOW]) || !$this->rPGY0 && !empty($i3XFS[$YSHOW]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $i3XFS[$YSHOW]['basename']))) { goto seFN9; } goto YLJBv; MftN3: $MWTFK = array('key' => $GG41J[$E35oE]['key'], 'url' => home_url()); goto UfyGQ; oN0gl: $bBwcp[$psqCd]['bootstrap'] = NULL; goto bjGWZ; wCNb3: self::$ER6LZ[] = $psqCd; goto ix1pg; YatHV: goto RisN7; goto vvZ_z; dxf1Y: $bBwcp[$psqCd]['bootstrap'] = NULL; goto YyJGG; E7Kv4: if (!version_compare($this->IHD2S[$YSHOW], $U4vC1['version'], '>')) { goto dJKJx; } goto VrBBv; Sdp5u: $this->show_notices($U4vC1, $Veeje); goto dxf1Y; q7CoF: $this->show_notices($U4vC1, $Veeje); goto YdNi0; GF4lD: if (!in_array($GG41J[$E35oE]['status'], ['trial_used', 'invalid', 'disabled', 'missing', 'key_mismatch'])) { goto L63_a; } goto MftN3; A9lCu: seFN9: goto nG2tI; NpbJ0: J7l8y: goto sUzZy; CN6k6: $E35oE = strtolower($i3XFS[$YSHOW]['name'] ?? ''); goto BHNHv; kMekA: $bBwcp[$psqCd]['bootstrap'] = NULL; goto wCNb3; MZrc0: goto RisN7; goto MySTm; tNSFZ: $bBwcp[$psqCd]['bootstrap'] = NULL; goto wwKLI; pICH2: $Veeje = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $U4vC1['name']); goto KiwtJ; JR2Jg: self::$ER6LZ[] = $psqCd; goto MA_2a; q1S_Q: self::$ER6LZ[] = $psqCd; goto MZrc0; ZALyp: if ('now' === $BVKyj[$psqCd]['expires']) { goto Z64di; } goto ubYKj; TaReG: if (!(!empty($U4vC1['bootstrap']) && is_callable($U4vC1['bootstrap']))) { goto QZUPx; } goto nb6L2; CFgqb: } goto fz1PB; ug67k: if (empty($bBwcp)) { goto Bn0SX; } goto KMu3a; kj1ay: if (!(count(self::$ER6LZ) > 0)) { goto J3dO4; } goto D29Gs; D_AXu: $i3XFS = Addons::get_addons_paths(); goto LB6cR; D29Gs: Addons::set_installed_addons($bBwcp); goto pRk6X; dcdIH: } public function check_addons() { add_filter('atum/queues/recurring_hooks', function ($dyQ4i) { $dyQ4i['atum/check_addons'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $dyQ4i; }); add_action('atum/check_addons', function () { goto WUhJe; J0DN_: if (!$FYRe5) { goto fVb6j; } goto wyu3D; P9WuB: $MuuXy = Addons::get_installed_addons(); goto GtjVn; WUhJe: $dGQd9 = Addons::get_keys(); goto P9WuB; GtjVn: if (!(FALSE !== Addons::get_last_api_access('check_addons'))) { goto qvspo; } goto TIfja; wyu3D: Addons::set_last_api_access('check_addons'); goto mfzrC; Ntvwr: $FYRe5 = FALSE; goto Eu8WY; MVwwO: o5KUy: goto J0DN_; TIfja: return; goto W71lx; mfzrC: fVb6j: goto a4Z9T; Eu8WY: foreach ($MuuXy as $OqceU) { goto RFf2U; h71Tk: if (!(empty($cgLzZ['extended']) && (!isset($InYKa->j0i8G) || TRUE !== $InYKa->j0i8G))) { goto cjDi9; } goto j2wyx; MxBxj: Ep0ug: goto GCbxT; lwdYo: $E35oE = trim(str_replace('trial', '', $CRgR0)); goto iisJy; JR5JV: $kf0K9 = $cgLzZ; goto P3iKq; yIND3: $cgLzZ = $dGQd9[$E35oE]; goto iXCxF; EQGY3: $FYRe5 = TRUE; goto yIND3; JstTo: $kf0K9['status'] = $InYKa->RSgD7; goto rc5qV; fRSkf: if (empty(array_diff_assoc($cgLzZ, $kf0K9))) { goto Ep0ug; } goto B48nw; iisJy: if (!(is_array($dGQd9) && array_key_exists($E35oE, $dGQd9))) { goto sm2V_; } goto EQGY3; iQGhf: if (!(strpos($CRgR0, 'trial') !== FALSE)) { goto BpmcY; } goto lwdYo; mCdrn: if (!($cgLzZ['status'] !== $InYKa->RSgD7)) { goto IXHls; } goto JstTo; P3iKq: if (!$InYKa) { goto ivmau; } goto mCdrn; qrPWt: if (!(!is_wp_error($XqF69) && isset($cgLzZ['status']) && 'valid' === $cgLzZ['status'])) { goto MRiDO; } goto ODUJu; h0rtA: $kf0K9['expires'] = $InYKa->TF5PV ?? date_i18n('Y-m-d H:i:s'); goto qsPmn; j2wyx: $kf0K9['extended'] = TRUE; goto Rwo2d; jXbCP: if (!(empty($cgLzZ['trial']) && isset($InYKa->o7kgv) && TRUE === $InYKa->o7kgv)) { goto FSbJK; } goto kVPJg; LtmBB: sm2V_: goto BldDd; kwaXv: FSbJK: goto h71Tk; rc5qV: IXHls: goto Q0MED; d5gf9: MRiDO: goto LtmBB; Q0MED: if (!(empty($cgLzZ['expires']) || $cgLzZ['expires'] !== $InYKa->TF5PV)) { goto Cjoqr; } goto h0rtA; iXCxF: $XqF69 = Addons::check_license($CRgR0, $cgLzZ['key']); goto qrPWt; qsPmn: Cjoqr: goto jXbCP; GCbxT: ivmau: goto d5gf9; Rwo2d: cjDi9: goto fRSkf; B48nw: Addons::update_key($CRgR0, $kf0K9); goto MxBxj; YMQFV: BXvYE: goto UnQcn; ODUJu: $InYKa = json_decode(wp_remote_retrieve_body($XqF69)); goto JR5JV; RFf2U: $CRgR0 = strtolower($OqceU['name']); goto iQGhf; BldDd: BpmcY: goto YMQFV; kVPJg: $kf0K9['trial'] = TRUE; goto kwaXv; UnQcn: } goto MVwwO; W71lx: qvspo: goto Ntvwr; a4Z9T: }); } private function show_notices($U4vC1, $Veeje) { AtumAdminNotices::add_notice($Veeje, strtolower($U4vC1['name']), 'error', FALSE, TRUE); add_action('after_plugin_row_' . $U4vC1['basename'], function ($V3hW6, $Mkznt) use($Veeje) { goto jB08j; ciyWq: echo $Veeje; goto VqAHO; FU8aI: ?>"] td { box-shadow: none !important; }</style>
			<?php  goto CHIVE; NhfPp: ?>"] th, tr[data-plugin="<?php  goto U0nU2; jB08j: ?>
			<tr class="plugin-update-tr active">
				<td colspan="4" class="plugin-update colspanchange">
					<div class="notice inline notice-error notice-alt">
						<p><?php  goto ciyWq; VqAHO: ?></p>
					</div>
				</td>
			</tr>
			<style>tr[data-plugin="<?php  goto MjzWW; MjzWW: echo esc_attr($V3hW6); goto NhfPp; U0nU2: echo esc_attr($V3hW6); goto FU8aI; CHIVE: }, 100, 2); } public static function get_bootstrapped_addons() { return self::$oeEj_; } public static function get_non_bootstrapped_addons() { return self::$ER6LZ; } public static function check_addon($H8C7T, $CRgR0, $c3G4W) { goto Rx7x1; zaICt: return FALSE; goto s4Yki; Lc091: n09hj: goto rP0yK; s4Yki: Lck6q: goto TWwn0; JYpQc: Ou6W6: goto ywblL; rP0yK: if (!(stripos($c3G4W, '-trial.php') === FALSE)) { goto Lck6q; } goto zaICt; ywblL: if (!(stripos($CRgR0, 'Trial') === FALSE)) { goto n09hj; } goto KO3dY; Rx7x1: if (!(stripos($H8C7T, '_trial') === FALSE)) { goto Ou6W6; } goto rump3; KO3dY: return FALSE; goto Lc091; rump3: return FALSE; goto JYpQc; TWwn0: return TRUE; goto TzvTi; TzvTi: } }