<?php
/** @noinspection ALL */
/**
  * @author      Be Rebel - https://berebel.io
  * @copyright   ©2023 Stock Management Labs™
 */
 namespace Atum\Addons; defined('ABSPATH') || die; use Atum\Components\AtumAdminNotices; use Atum\Components\AtumAdminModal; use Atum\Inc\Helpers; final class AddonsLoader { private $B9H4Z = array('action_logs' => '1.1.5', 'export_pro' => '1.3.4', 'multi_inventory' => '1.5.0', 'product_levels' => '1.6.0', 'purchase_orders' => '0.0.1', 'stock_takes' => '0.0.1', 'pick_pack' => '0.0.1'); private $elykx = array('action_logs' => '1.3.4', 'export_pro' => '1.5.4', 'multi_inventory' => '1.7.9', 'product_levels' => '1.8.6', 'purchase_orders' => '1.0.9', 'stock_takes' => '1.0.0', 'pick_pack' => '1.0.0'); private static $NYQWw = []; private static $k2H4_ = []; private $nCCOW; public function __construct() { goto zDACR; G_ObS: $this->check_trials(); goto oafG8; zDACR: $this->nCCOW = defined('ATUM_DEBUG') && TRUE === ATUM_DEBUG; goto FsBur; FsBur: add_action('after_setup_theme', array($this, 'load_addons'), 99); goto G_ObS; oafG8: } public function load_addons() { goto QWmeq; mwZCt: if (empty($esac2)) { goto rjfGa; } goto yXy3s; MeVzd: $esac2 = []; goto G1RtQ; yXy3s: $l9pYT = AtumAdminModal::get_instance([ATUM_SHORT_NAME . '-addons']); goto CBJ9B; ytHLu: $TZCDw = Addons::get_addons_paths(); goto oMXZ0; G1RtQ: $GSxxS = Addons::get_keys(); goto ytHLu; CBJ9B: $l9pYT->add_modal('trial-expired', array('icon' => 'warning', 'title' => _n('ATUM trial license expired!', 'ATUM trial licenses expired!', count($esac2), ATUM_TEXT_DOMAIN), 'showCancelButton' => FALSE, 'showConfirmButton' => FALSE, 'customClass' => ['container' => 'atum-trial-modal'], 'footer' => sprintf(__('Why are these add-ons expired and blocked? %1$sREAD INFO%2$s', ATUM_TEXT_DOMAIN), '&nbsp;<a href="https://stockmanagementlabs.crunch.help/" target="_blank">', '</a>')), Helpers::load_view_to_string('add-ons/expired-trials-modal', ['expired_trials' => $esac2])); goto hjrWL; G0N2y: CMm8l: goto of3i6; QWmeq: $Y7g7f = Addons::get_installed_addons(); goto MfN_E; hjrWL: rjfGa: goto Mgicj; MfN_E: if (empty($Y7g7f)) { goto fghXk; } goto MeVzd; of3i6: fghXk: goto txJw7; oMXZ0: foreach ($Y7g7f as $OoEh5 => $SH8uh) { goto Mc7j7; SlAPh: $Y7g7f[$OoEh5]['bootstrap'] = NULL; goto X_JNT; lCAAo: goto oZXUE; goto J3Qbg; LHtt5: self::$k2H4_[] = $OoEh5; goto Gwm2F; wCUdh: array_pop(self::$NYQWw); goto SBrra; HOk06: oZXUE: goto cb9Yb; skzXG: $ZDlzt = sprintf(__('Your ATUM %1$s has expired on %2$s, and it has been disabled.', ATUM_TEXT_DOMAIN), $SH8uh['name'], date_i18n(get_option('date_format'), strtotime($GSxxS[$kIwsC]['expires']))); goto P67Mr; DJl4r: eV3Hj: goto hWEuX; ltn2g: if (!version_compare($this->elykx[$acRmm], $SH8uh['version'], '>')) { goto MxHpV; } goto shNcY; J3Qbg: qZIH_: goto ltn2g; DVqLS: YTc2v: goto O5ngb; HHJSE: $esac2[$OoEh5] = $SH8uh; goto hlsR_; Mc7j7: $U_KDI = strpos($OoEh5, '_trial') !== FALSE || strpos($SH8uh['basename'], 'trial') !== FALSE; goto ihAJD; ED5fW: A3heZ: goto HOk06; FW3fs: AtumAdminNotices::add_notice($ZDlzt, strtolower($SH8uh['name']), 'error', FALSE, TRUE); goto SlAPh; GlrFk: $Y7g7f[$OoEh5]['bootstrap'] = NULL; goto nkoYF; d_kSF: self::$k2H4_[] = $OoEh5; goto JCeGd; Xni0d: $esac2[$OoEh5]['extended'] = $GSxxS[$kIwsC]['extended'] ?? FALSE; goto i8QX2; SBrra: self::$k2H4_[] = $OoEh5; goto Dn2AM; hYUU0: if (!(empty($GSxxS) || empty($GSxxS[$kIwsC]) || empty($GSxxS[$kIwsC]['key']))) { goto QccIP; } goto mfqvv; QoKfm: self::$NYQWw[] = $OoEh5; goto lXOhf; shNcY: $ZDlzt = sprintf(__('The ATUM %1$s add-on requires at least version %2$s to work with the current ATUM version. Please, update it.', ATUM_TEXT_DOMAIN), $SH8uh['name'], $this->elykx[$acRmm]); goto GKmqg; N1mip: $ZDlzt = sprintf(__('The ATUM %s add-on could not be loaded because is not a known add-on.', ATUM_TEXT_DOMAIN), $SH8uh['name']); goto MSjXy; zSQ5d: self::$k2H4_[] = $OoEh5; goto lCAAo; O5ngb: $ZDlzt = sprintf(__('Your ATUM %1$s has expired and it has been disabled.', ATUM_TEXT_DOMAIN), $SH8uh['name']); goto f7BQw; asiVs: if (isset($this->elykx[$acRmm])) { goto qZIH_; } goto N1mip; Ef5Bz: $kIwsC = strtolower($TZCDw[$acRmm]['name'] ?? ''); goto hYUU0; i8QX2: if ('now' === $esac2[$OoEh5]['expires']) { goto YTc2v; } goto skzXG; hWEuX: LUyhb: goto rmOQI; ihAJD: $acRmm = $U_KDI ? str_replace('_trial', '', $OoEh5) : $OoEh5; goto asiVs; mfqvv: $ZDlzt = sprintf(__('The ATUM %1$s could not be loaded because its license is missing. Please, activate your trial from the %2$sadd-ons%3$s page.', ATUM_TEXT_DOMAIN), $SH8uh['name'], '<a href="' . add_query_arg('page', 'atum-addons', admin_url('admin.php')) . '">', '</a>'); goto pJXYm; Vrymt: if (!(isset($Y7g7f[$acRmm]) || !$this->nCCOW && !empty($TZCDw[$acRmm]['basename']) && file_exists(WP_PLUGIN_DIR . '/' . $TZCDw[$acRmm]['basename']))) { goto snlIi; } goto iyfnz; KUmqj: AtumAdminNotices::add_notice($ZDlzt . ' ' . sprintf(__('Click %1$shere%2$s to purchase the full version.', ATUM_TEXT_DOMAIN), '<a href="' . $SH8uh['addon_url'] . '" target="_blank">', '</a>'), strtolower($SH8uh['name']), 'error', FALSE, TRUE); goto NjyJ2; f7BQw: Ceypv: goto KUmqj; UM0EO: $Y7g7f[$OoEh5]['bootstrap'] = NULL; goto zSQ5d; pJXYm: AtumAdminNotices::add_notice($ZDlzt, strtolower($SH8uh['name']), 'error', FALSE, TRUE); goto Wk2wk; hlsR_: $esac2[$OoEh5]['expires'] = $GSxxS[$kIwsC]['expires'] ?? 'now'; goto c49WH; z6J5h: goto oZXUE; goto EECyz; GKmqg: AtumAdminNotices::add_notice($ZDlzt, strtolower($SH8uh['name']), 'error', FALSE, TRUE); goto GlrFk; JCeGd: goto oZXUE; goto Qd9zp; MSjXy: AtumAdminNotices::add_notice($ZDlzt, strtolower($SH8uh['name']), 'error', FALSE, TRUE); goto UM0EO; iyfnz: $ZDlzt = sprintf(__('The ATUM %s could not be loaded because the full version is installed. To use the trial, uninstall the full version first.', ATUM_TEXT_DOMAIN), $SH8uh['name']); goto FW3fs; EECyz: MxHpV: goto DzLv5; O0813: if (!(!$I2WxV && !empty($this->B9H4Z[$OoEh5]) && version_compare($this->B9H4Z[$OoEh5], $SH8uh['version'], '<'))) { goto ZJOVs; } goto Gemj_; Wk2wk: $Y7g7f[$OoEh5]['bootstrap'] = NULL; goto d_kSF; cWoCT: goto oZXUE; goto FHncE; FHncE: snlIi: goto Ef5Bz; rmOQI: if (!(!empty($SH8uh['bootstrap']) && is_callable($SH8uh['bootstrap']))) { goto A3heZ; } goto QoKfm; X_JNT: self::$k2H4_[] = $OoEh5; goto cWoCT; lXOhf: $I2WxV = call_user_func($SH8uh['bootstrap']); goto O0813; nkoYF: self::$k2H4_[] = $OoEh5; goto z6J5h; Qd9zp: QccIP: goto PwMxS; Gwm2F: goto oZXUE; goto DJl4r; Gemj_: $Y7g7f[$OoEh5]['bootstrap'] = NULL; goto wCUdh; PwMxS: if (!(empty($GSxxS[$kIwsC]['expires']) || strtotime($GSxxS[$kIwsC]['expires']) <= time())) { goto eV3Hj; } goto HHJSE; DzLv5: if (!$U_KDI) { goto LUyhb; } goto Vrymt; NjyJ2: $Y7g7f[$OoEh5]['bootstrap'] = NULL; goto LHtt5; Dn2AM: ZJOVs: goto ED5fW; c49WH: $esac2[$OoEh5]['key'] = $GSxxS[$kIwsC]['key']; goto Xni0d; P67Mr: goto Ceypv; goto DVqLS; cb9Yb: } goto I8UBt; go42g: Addons::set_installed_addons($Y7g7f); goto G0N2y; I8UBt: kbxv5: goto mwZCt; Mgicj: if (!(count(self::$k2H4_) > 0)) { goto CMm8l; } goto go42g; txJw7: } public function check_trials() { add_filter('atum/queues/recurring_hooks', function ($ARtN2) { $ARtN2['atum/check_trials'] = array('time' => 'now', 'interval' => DAY_IN_SECONDS); return $ARtN2; }); add_action('atum/check_trials', function () { goto u_2I5; u_2I5: $XTnCZ = Addons::get_keys(); goto au30K; au30K: foreach ($XTnCZ as $nCuxT => $z4AA1) { goto YOHvD; a8Jol: Addons::update_key($nCuxT, $Oe1Vs); goto JTPrQ; eRRlK: $Oe1Vs['key'] = $z4AA1['key']; goto a8Jol; GhQKC: $p1_oz = json_decode(wp_remote_retrieve_body($sBFjs)); goto kqJJe; O72FM: $Oe1Vs['status'] = $p1_oz->co84g; goto VXej0; xa89Q: if (!(empty($z4AA1['expires']) || $z4AA1['expires'] !== $p1_oz->gsBVa)) { goto mAMn3; } goto Kbs3u; kqJJe: $Oe1Vs = []; goto TqIKn; nxRam: if (empty($Oe1Vs)) { goto ICfwd; } goto eRRlK; T1hBi: if (!($z4AA1['status'] !== $p1_oz->co84g)) { goto yeYYn; } goto O72FM; JYPDw: if (!(empty($z4AA1['extended']) && (!isset($p1_oz->ZzIP2) || TRUE !== $p1_oz->ZzIP2))) { goto tT_Jl; } goto CV9AC; VXej0: yeYYn: goto xa89Q; f6IwQ: tT_Jl: goto KgyAN; C2FSU: eo1Uw: goto QsTdP; s7CeI: mAMn3: goto JYPDw; KgyAN: cBApc: goto nxRam; CV9AC: $Oe1Vs['extended'] = TRUE; goto f6IwQ; JTPrQ: ICfwd: goto d3ECP; w2cdo: $sBFjs = Addons::check_license($nCuxT, $z4AA1['key']); goto g9OxI; p_0kf: ZPraM: goto C2FSU; TqIKn: if (!$p1_oz) { goto cBApc; } goto T1hBi; g9OxI: if (!(!is_wp_error($sBFjs) && isset($z4AA1['status']) && 'valid' === $z4AA1['status'])) { goto W4pDa; } goto GhQKC; d3ECP: W4pDa: goto p_0kf; Kbs3u: $Oe1Vs['expires'] = $p1_oz->gsBVa; goto s7CeI; YOHvD: if (!(!empty($z4AA1['trial']) && TRUE === $z4AA1['trial'])) { goto ZPraM; } goto w2cdo; QsTdP: } goto PHW0m; PHW0m: UjP1E: goto rXvfF; rXvfF: }); } public static function get_bootstrapped_addons() { return self::$NYQWw; } public static function get_non_bootstrapped_addons() { return self::$k2H4_; } }